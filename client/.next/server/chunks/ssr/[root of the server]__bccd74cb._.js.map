{
  "version": 3,
  "sources": [],
  "sections": [
<<<<<<< HEAD
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file:///home/samk/Desktop/binary/client/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":["file:///home/samk/Desktop/binary/client/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Progress({\n  className,\n  value,\n  ...props\n}: React.ComponentProps<typeof ProgressPrimitive.Root>) {\n  return (\n    <ProgressPrimitive.Root\n      data-slot=\"progress\"\n      className={cn(\n        \"bg-primary/20 relative h-2 w-full overflow-hidden rounded-full\",\n        className\n      )}\n      {...props}\n    >\n      <ProgressPrimitive.Indicator\n        data-slot=\"progress-indicator\"\n        className=\"bg-primary h-full w-full flex-1 transition-all\"\n        style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n      />\n    </ProgressPrimitive.Root>\n  )\n}\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,SAAS,EAChB,SAAS,EACT,KAAK,EACL,GAAG,OACiD;IACpD,qBACE,8OAAC,oKAAA,CAAA,OAAsB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,oKAAA,CAAA,YAA2B;YAC1B,aAAU;YACV,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIlE","debugId":null}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":["file:///home/samk/Desktop/binary/client/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/70\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 237, "column": 0}, "map": {"version":3,"sources":["file:///home/samk/Desktop/binary/client/src/components/connect-wallet.tsx"],"sourcesContent":["\"use client\"\n\nimport { Button } from \"@/components/ui/button\"\nimport { Wallet } from \"lucide-react\"\n\ninterface ConnectWalletProps {\n  onConnect: () => void\n}\n\nexport function ConnectWallet({ onConnect }: ConnectWalletProps) {\n  return (\n    <div className=\"bg-gray-900/30 border border-gray-800 rounded-lg p-4\">\n      <div className=\"flex flex-col items-center justify-center py-4\">\n        <Wallet className=\"h-10 w-10 text-purple-400 mb-3\" />\n        <h3 className=\"font-medium text-lg mb-1\">Connect Wallet</h3>\n        <p className=\"text-sm text-gray-400 text-center mb-4\">Connect your wallet to place bets and earn rewards</p>\n        <Button\n          className=\"bg-gradient-to-r from-purple-600 to-indigo-600 hover:from-purple-700 hover:to-indigo-700\"\n          onClick={onConnect}\n        >\n          Connect Wallet\n        </Button>\n      </div>\n    </div>\n  )\n}\n\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AASO,SAAS,cAAc,EAAE,SAAS,EAAsB;IAC7D,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC,sMAAA,CAAA,SAAM;oBAAC,WAAU;;;;;;8BAClB,8OAAC;oBAAG,WAAU;8BAA2B;;;;;;8BACzC,8OAAC;oBAAE,WAAU;8BAAyC;;;;;;8BACtD,8OAAC,kIAAA,CAAA,SAAM;oBACL,WAAU;oBACV,SAAS;8BACV;;;;;;;;;;;;;;;;;AAMT","debugId":null}},
    {"offset": {"line": 303, "column": 0}, "map": {"version":3,"sources":["file:///home/samk/Desktop/binary/client/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { XIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Dialog({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Root>) {\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />\n}\n\nfunction DialogTrigger({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Trigger>) {\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />\n}\n\nfunction DialogPortal({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Portal>) {\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />\n}\n\nfunction DialogClose({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Close>) {\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />\n}\n\nfunction DialogOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {\n  return (\n    <DialogPrimitive.Overlay\n      data-slot=\"dialog-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogContent({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Content>) {\n  return (\n    <DialogPortal data-slot=\"dialog-portal\">\n      <DialogOverlay />\n      <DialogPrimitive.Content\n        data-slot=\"dialog-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n        <DialogPrimitive.Close className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\">\n          <XIcon />\n          <span className=\"sr-only\">Close</span>\n        </DialogPrimitive.Close>\n      </DialogPrimitive.Content>\n    </DialogPortal>\n  )\n}\n\nfunction DialogHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-header\"\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-footer\"\n      className={cn(\n        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Title>) {\n  return (\n    <DialogPrimitive.Title\n      data-slot=\"dialog-title\"\n      className={cn(\"text-lg leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Description>) {\n  return (\n    <DialogPrimitive.Description\n      data-slot=\"dialog-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,SAAS,OAAO,EACd,GAAG,OAC+C;IAClD,qBAAO,8OAAC,kKAAA,CAAA,OAAoB;QAAC,aAAU;QAAU,GAAG,KAAK;;;;;;AAC3D;AAEA,SAAS,cAAc,EACrB,GAAG,OACkD;IACrD,qBAAO,8OAAC,kKAAA,CAAA,UAAuB;QAAC,aAAU;QAAkB,GAAG,KAAK;;;;;;AACtE;AAEA,SAAS,aAAa,EACpB,GAAG,OACiD;IACpD,qBAAO,8OAAC,kKAAA,CAAA,SAAsB;QAAC,aAAU;QAAiB,GAAG,KAAK;;;;;;AACpE;AAEA,SAAS,YAAY,EACnB,GAAG,OACgD;IACnD,qBAAO,8OAAC,kKAAA,CAAA,QAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,GAAG,OACkD;IACrD,qBACE,8OAAC,kKAAA,CAAA,UAAuB;QACtB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,QAAQ,EACR,GAAG,OACkD;IACrD,qBACE,8OAAC;QAAa,aAAU;;0BACtB,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAuB;gBACtB,aAAU;gBACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+WACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8OAAC,kKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,8OAAC,gMAAA,CAAA,QAAK;;;;;0CACN,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKpC;AAEA,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0DACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,kKAAA,CAAA,QAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACsD;IACzD,qBACE,8OAAC,kKAAA,CAAA,cAA2B;QAC1B,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 476, "column": 0}, "map": {"version":3,"sources":["file:///home/samk/Desktop/binary/client/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 502, "column": 0}, "map": {"version":3,"sources":["file:///home/samk/Desktop/binary/client/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 534, "column": 0}, "map": {"version":3,"sources":["file:///home/samk/Desktop/binary/client/src/components/battle-card.tsx"],"sourcesContent":["\"use client\"\n\nimport type React from \"react\"\n\nimport { useState } from \"react\"\nimport { Shield } from \"lucide-react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Badge } from \"@/components/ui/badge\"\n\ntype SpellLevel = 1 | 2 | 3\ntype Element = \"inferno\" | \"glacius\" | \"ventus\"\n\ninterface BattleCardProps {\n  element: Element\n  name: string\n  description: string\n  icon: React.ReactNode\n  color: string\n  onCast: (level: SpellLevel, useDefense: boolean) => void\n  canUseDefense: boolean\n}\n\nexport function BattleCard({ element, name, description, icon, color, onCast, canUseDefense }: BattleCardProps) {\n  const [selectedLevel, setSelectedLevel] = useState<SpellLevel>(1)\n  const [useDefense, setUseDefense] = useState(false)\n\n  const getColorClasses = (color: string, element: \"bg\" | \"border\" | \"text\" | \"hover\") => {\n    const colorMap: Record<string, Record<string, string>> = {\n      red: {\n        bg: \"bg-red-900/30\",\n        border: \"border-red-500/30\",\n        text: \"text-red-400\",\n        hover: \"hover:bg-red-900/50 hover:border-red-500/50\",\n      },\n      blue: {\n        bg: \"bg-blue-900/30\",\n        border: \"border-blue-500/30\",\n        text: \"text-blue-400\",\n        hover: \"hover:bg-blue-900/50 hover:border-blue-500/50\",\n      },\n      green: {\n        bg: \"bg-green-900/30\",\n        border: \"border-green-500/30\",\n        text: \"text-green-400\",\n        hover: \"hover:bg-green-900/50 hover:border-green-500/50\",\n      },\n      purple: {\n        bg: \"bg-purple-900/30\",\n        border: \"border-purple-500/30\",\n        text: \"text-purple-400\",\n        hover: \"hover:bg-purple-900/50 hover:border-purple-500/50\",\n      },\n    }\n\n    return colorMap[color]?.[element] || colorMap.purple[element]\n  }\n\n  const handleCast = () => {\n    onCast(selectedLevel, useDefense)\n    setSelectedLevel(1)\n    setUseDefense(false)\n  }\n\n  const getLevelDamage = (level: SpellLevel): number => {\n    return level === 1 ? 20 : level === 2 ? 25 : 30\n  }\n\n  return (\n    <div\n      className={`${getColorClasses(color, \"bg\")} border ${getColorClasses(color, \"border\")} rounded-lg p-3 ${getColorClasses(color, \"hover\")} transition-all duration-300`}\n    >\n      <div className=\"flex items-center mb-2\">\n        <div\n          className={`w-8 h-8 rounded-full flex items-center justify-center ${getColorClasses(color, \"bg\")} border ${getColorClasses(color, \"border\")} mr-2`}\n        >\n          {icon}\n        </div>\n        <div>\n          <h3 className=\"font-medium text-sm\">{name}</h3>\n          <p className=\"text-xs text-gray-400\">{description}</p>\n        </div>\n      </div>\n\n      <div className=\"flex justify-between items-center mb-2\">\n        <div className=\"flex gap-1\">\n          {[1, 2, 3].map((level) => (\n            <Button\n              key={level}\n              size=\"sm\"\n              variant=\"outline\"\n              className={`w-7 h-7 p-0 ${selectedLevel === level ? `${getColorClasses(color, \"bg\")} ${getColorClasses(color, \"border\")}` : \"bg-gray-900/50 border-gray-700\"}`}\n              onClick={() => setSelectedLevel(level as SpellLevel)}\n            >\n              {level}\n            </Button>\n          ))}\n        </div>\n        <Badge className=\"bg-gray-800 border-0\">{getLevelDamage(selectedLevel)} DMG</Badge>\n      </div>\n\n      <div className=\"flex items-center justify-between\">\n        <Button\n          size=\"sm\"\n          variant=\"outline\"\n          className={`${useDefense ? \"bg-blue-900/30 border-blue-500/30\" : \"bg-gray-900/50 border-gray-700\"} flex items-center gap-1`}\n          onClick={() => setUseDefense(!useDefense)}\n          disabled={!canUseDefense}\n        >\n          <Shield className=\"h-3 w-3\" />\n          <span className=\"text-xs\">Defense</span>\n        </Button>\n\n        <Button size=\"sm\" className={`bg-${color}-600 hover:bg-${color}-700`} onClick={handleCast}>\n          Cast\n        </Button>\n      </div>\n    </div>\n  )\n}\n\n"],"names":[],"mappings":";;;;AAIA;AACA;AACA;AACA;AAPA;;;;;;AAsBO,SAAS,WAAW,EAAE,OAAO,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,aAAa,EAAmB;IAC5G,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAc;IAC/D,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,MAAM,kBAAkB,CAAC,OAAe;QACtC,MAAM,WAAmD;YACvD,KAAK;gBACH,IAAI;gBACJ,QAAQ;gBACR,MAAM;gBACN,OAAO;YACT;YACA,MAAM;gBACJ,IAAI;gBACJ,QAAQ;gBACR,MAAM;gBACN,OAAO;YACT;YACA,OAAO;gBACL,IAAI;gBACJ,QAAQ;gBACR,MAAM;gBACN,OAAO;YACT;YACA,QAAQ;gBACN,IAAI;gBACJ,QAAQ;gBACR,MAAM;gBACN,OAAO;YACT;QACF;QAEA,OAAO,QAAQ,CAAC,MAAM,EAAE,CAAC,QAAQ,IAAI,SAAS,MAAM,CAAC,QAAQ;IAC/D;IAEA,MAAM,aAAa;QACjB,OAAO,eAAe;QACtB,iBAAiB;QACjB,cAAc;IAChB;IAEA,MAAM,iBAAiB,CAAC;QACtB,OAAO,UAAU,IAAI,KAAK,UAAU,IAAI,KAAK;IAC/C;IAEA,qBACE,8OAAC;QACC,WAAW,GAAG,gBAAgB,OAAO,MAAM,QAAQ,EAAE,gBAAgB,OAAO,UAAU,gBAAgB,EAAE,gBAAgB,OAAO,SAAS,4BAA4B,CAAC;;0BAErK,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBACC,WAAW,CAAC,sDAAsD,EAAE,gBAAgB,OAAO,MAAM,QAAQ,EAAE,gBAAgB,OAAO,UAAU,KAAK,CAAC;kCAEjJ;;;;;;kCAEH,8OAAC;;0CACC,8OAAC;gCAAG,WAAU;0CAAuB;;;;;;0CACrC,8OAAC;gCAAE,WAAU;0CAAyB;;;;;;;;;;;;;;;;;;0BAI1C,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCACZ;4BAAC;4BAAG;4BAAG;yBAAE,CAAC,GAAG,CAAC,CAAC,sBACd,8OAAC,kIAAA,CAAA,SAAM;gCAEL,MAAK;gCACL,SAAQ;gCACR,WAAW,CAAC,YAAY,EAAE,kBAAkB,QAAQ,GAAG,gBAAgB,OAAO,MAAM,CAAC,EAAE,gBAAgB,OAAO,WAAW,GAAG,kCAAkC;gCAC9J,SAAS,IAAM,iBAAiB;0CAE/B;+BANI;;;;;;;;;;kCAUX,8OAAC,iIAAA,CAAA,QAAK;wBAAC,WAAU;;4BAAwB,eAAe;4BAAe;;;;;;;;;;;;;0BAGzE,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,kIAAA,CAAA,SAAM;wBACL,MAAK;wBACL,SAAQ;wBACR,WAAW,GAAG,aAAa,sCAAsC,iCAAiC,wBAAwB,CAAC;wBAC3H,SAAS,IAAM,cAAc,CAAC;wBAC9B,UAAU,CAAC;;0CAEX,8OAAC,sMAAA,CAAA,SAAM;gCAAC,WAAU;;;;;;0CAClB,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;kCAG5B,8OAAC,kIAAA,CAAA,SAAM;wBAAC,MAAK;wBAAK,WAAW,CAAC,GAAG,EAAE,MAAM,cAAc,EAAE,MAAM,IAAI,CAAC;wBAAE,SAAS;kCAAY;;;;;;;;;;;;;;;;;;AAMnG","debugId":null}},
    {"offset": {"line": 734, "column": 0}, "map": {"version":3,"sources":["file:///home/samk/Desktop/binary/client/src/app/battle/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect, useRef } from \"react\"\nimport Image from \"next/image\"\nimport Link from \"next/link\"\nimport { io, type Socket } from \"socket.io-client\"\nimport { Shield, Flame, Snowflake, Wind, ArrowLeft, Heart, Users, Trophy, Wifi } from \"lucide-react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Progress } from \"@/components/ui/progress\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { ConnectWallet } from \"@/components/connect-wallet\"\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogFooter,\n} from \"@/components/ui/dialog\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { BattleCard } from \"@/components/battle-card\"\n\n// Types for our game state\ntype Element = \"inferno\" | \"glacius\" | \"ventus\"\ntype SpellLevel = 1 | 2 | 3\ntype Player = \"player\" | \"opponent\"\ntype BattleOutcome = \"win\" | \"lose\" | \"draw\"\n\ninterface RoundResult {\n  winner: Player | null\n  playerElement: Element\n  playerLevel: SpellLevel\n  opponentElement: Element\n  opponentLevel: SpellLevel\n  damage: number\n  isVoid: boolean\n}\n\ninterface BattleState {\n  round: number\n  playerHealth: number\n  opponentHealth: number\n  playerWins: number\n  opponentWins: number\n  playerUsedDefense: boolean\n  opponentUsedDefense: boolean\n  currentRoundResults: RoundResult[]\n  battleLog: string[]\n  currentBattle: number\n}\n\ninterface PlayerInfo {\n  socketId: string\n  type: string\n}\n\nexport default function BattlePage() {\n  // WebSocket connection\n  const socketRef = useRef<Socket | null>(null)\n  const [isConnected, setIsConnected] = useState(false)\n  const [roomId, setRoomId] = useState<string | null>(null)\n  const [isWaitingForOpponent, setIsWaitingForOpponent] = useState(false)\n  const [customServerIp, setCustomServerIp] = useState(\"\")\n  const [showConnectionDialog, setShowConnectionDialog] = useState(false)\n  const [showRoomDialog, setShowRoomDialog] = useState(false)\n  const [roomCodeInput, setRoomCodeInput] = useState(\"\")\n  const [mySocketId, setMySocketId] = useState<string | null>(null)\n  const [opponentSocketId, setOpponentSocketId] = useState<string | null>(null)\n  const [playersInRoom, setPlayersInRoom] = useState<string[]>([])\n\n  // Battle state\n  const [battleState, setBattleState] = useState<BattleState>({\n    round: 1,\n    playerHealth: 100,\n    opponentHealth: 100,\n    playerWins: 0,\n    opponentWins: 0,\n    playerUsedDefense: false,\n    opponentUsedDefense: false,\n    currentRoundResults: [],\n    battleLog: [\"• Connect to a server to begin\"],\n    currentBattle: 1,\n  })\n\n  // UI state\n  const [selectedElement, setSelectedElement] = useState<Element | null>(null)\n  const [selectedLevel, setSelectedLevel] = useState<SpellLevel>(1)\n  const [isUsingDefense, setIsUsingDefense] = useState(false)\n  const [showRoundResult, setShowRoundResult] = useState(false)\n  const [showBattleResult, setShowBattleResult] = useState(false)\n  const [roundWinner, setRoundWinner] = useState<Player | null>(null)\n  const [battleWinner, setBattleWinner] = useState<Player | null>(null)\n  const [isSpectatorMode, setIsSpectatorMode] = useState(false)\n  const [spectatorCount, setSpectatorCount] = useState(0)\n  const [totalBetAmount, setTotalBetAmount] = useState(0)\n  const [isWalletConnected, setIsWalletConnected] = useState(false)\n  const [battleEnded, setBattleEnded] = useState(false)\n  const [waitingForOpponentMove, setWaitingForOpponentMove] = useState(false)\n\n  // Initialize WebSocket connection\n  useEffect(() => {\n    const wsServer = customServerIp\n      ? `http://${customServerIp}:3001`\n      : process.env.NEXT_PUBLIC_WS_SERVER || \"http://localhost:3001\"\n\n    // Connect to WebSocket server\n    const socket = io(wsServer, {\n      autoConnect: false,\n      reconnectionAttempts: 3,\n      reconnectionDelay: 1000,\n    })\n\n    socketRef.current = socket\n\n    // Event listeners\n    socket.on(\"connect\", () => {\n      setIsConnected(true)\n      setMySocketId(socket?.id)\n      addBattleLog(\"• Connected to battle server\")\n    })\n\n    socket.on(\"disconnect\", () => {\n      setIsConnected(false)\n      addBattleLog(\"• Disconnected from battle server\")\n    })\n    \n    \n\n    socket.on(\"room_joined\", (data: { roomId: string; isSpectator: boolean }) => {\n      setRoomId(data.roomId)\n      setIsWaitingForOpponent(!data.isSpectator)\n      setIsSpectatorMode(data.isSpectator)\n      addBattleLog(`• Joined room ${data.roomId}`)\n      if (data.isSpectator) {\n        addBattleLog(\"• Entered spectator mode\")\n      } else {\n        addBattleLog(\"• Waiting for opponent...\")\n      }\n    })\n\n    socket.on(\"opponent_joined\", () => {\n      setIsWaitingForOpponent(false)\n      addBattleLog(\"• Opponent has joined the battle!\")\n    })\n\n    socket.on(\"spectator_count\", (count: number) => {\n      setSpectatorCount(count)\n    })\n\n    socket.on(\"bet_update\", (amount: number) => {\n      setTotalBetAmount(amount)\n    })\n\n    socket.on(\"room-players\", (playerList: string[]) => {\n      setPlayersInRoom(playerList)\n\n      // Find opponent socket ID (the one that's not mine)\n      if (playerList.length === 2) {\n        const opponent = playerList.find((id) => id !== socket.id)\n        if (opponent) {\n          setOpponentSocketId(opponent)\n        }\n      }\n    })\n\n    socket.on(\"round_start\", () => {\n      setWaitingForOpponentMove(false)\n      addBattleLog(`• Round ${battleState.round} begins! Choose your spell.`)\n    })\n\n    socket.on(\"round_result\", (result: RoundResult) => {\n      handleRoundResult(result)\n      setWaitingForOpponentMove(false)\n    })\n\n    socket.on(\"battle_result\", (winner: Player) => {\n      setBattleWinner(winner)\n      setBattleEnded(true)\n      setShowBattleResult(true)\n      addBattleLog(winner === \"player\" ? \"• You won the battle!\" : \"• You lost the battle!\")\n    })\n\n    socket.on(\"opponent_left\", () => {\n      addBattleLog(\"• Opponent has left the battle\")\n      setIsWaitingForOpponent(true)\n      setWaitingForOpponentMove(false)\n    })\n\n    socket.on(\"error\", (message: string) => {\n      addBattleLog(`• Error: ${message}`)\n      setWaitingForOpponentMove(false)\n    })\n\n    // Connect to server\n    socket.connect()\n\n    // Cleanup on unmount\n    return () => {\n      socket.disconnect()\n    }\n  }, [customServerIp])\n\n  // Helper function to add messages to battle log\n  const addBattleLog = (message: string) => {\n    setBattleState((prev) => ({\n      ...prev,\n      battleLog: [...prev.battleLog.slice(-7), message],\n    }))\n  }\n\n  // Determine the outcome of an element matchup\n  const getElementOutcome = (playerElement: Element, opponentElement: Element): BattleOutcome => {\n    if (playerElement === opponentElement) return \"draw\"\n\n    const winConditions: Record<Element, Element> = {\n      inferno: \"glacius\",\n      glacius: \"ventus\",\n      ventus: \"inferno\",\n    }\n\n    return winConditions[playerElement] === opponentElement ? \"win\" : \"lose\"\n  }\n\n  // Calculate damage based on element matchup and levels\n  const calculateDamage = (\n    playerElement: Element,\n    playerLevel: SpellLevel,\n    opponentElement: Element,\n    opponentLevel: SpellLevel,\n  ): { winner: Player | null; damage: number } => {\n    const outcome = getElementOutcome(playerElement, opponentElement)\n\n    if (outcome === \"win\") {\n      return { winner: \"player\", damage: getLevelDamage(playerLevel) }\n    } else if (outcome === \"lose\") {\n      return { winner: \"opponent\", damage: getLevelDamage(opponentLevel) }\n    } else {\n      // Same element - higher level wins with damage = difference\n      if (playerLevel > opponentLevel) {\n        return { winner: \"player\", damage: getLevelDamage(playerLevel) - getLevelDamage(opponentLevel) }\n      } else if (opponentLevel > playerLevel) {\n        return { winner: \"opponent\", damage: getLevelDamage(opponentLevel) - getLevelDamage(playerLevel) }\n      } else {\n        // Same level - draw\n        return { winner: null, damage: 0 }\n      }\n    }\n  }\n\n  // Get damage for a specific level\n  const getLevelDamage = (level: SpellLevel): number => {\n    return level === 1 ? 20 : level === 2 ? 25 : 30\n  }\n\n  // Handle round results from server\n  const handleRoundResult = (result: RoundResult) => {\n    setBattleState((prev) => {\n      const newState = { ...prev }\n\n      // Update health based on damage\n      if (!result.isVoid) {\n        if (result.winner === \"player\") {\n          newState.opponentHealth = Math.max(0, newState.opponentHealth - result.damage)\n        } else if (result.winner === \"opponent\") {\n          newState.playerHealth = Math.max(0, newState.playerHealth - result.damage)\n        }\n      }\n\n      // Add to round results\n      newState.currentRoundResults = [...newState.currentRoundResults, result]\n\n      // Update battle log\n      let logMessage = \"\"\n      if (result.isVoid) {\n        logMessage = \"• Defense card negated the round!\"\n      } else if (result.winner === null) {\n        logMessage = \"• Round ended in a draw!\"\n      } else {\n        const winner = result.winner === \"player\" ? \"You\" : \"Opponent\"\n        const loser = result.winner === \"player\" ? \"Opponent\" : \"You\"\n        logMessage = `• ${winner} dealt ${result.damage} damage to ${loser}`\n      }\n      newState.battleLog = [...newState.battleLog, logMessage]\n\n      // Check if round is complete (5 rounds)\n      if (newState.currentRoundResults.length >= 5) {\n        determineRoundWinner(newState)\n      }\n\n      return newState\n    })\n  }\n\n  // Determine the winner of a complete round (5 battles)\n  const determineRoundWinner = (state: BattleState) => {\n    // Count wins\n    const playerWins = state.currentRoundResults.filter((r) => r.winner === \"player\").length\n    const opponentWins = state.currentRoundResults.filter((r) => r.winner === \"opponent\").length\n\n    // Determine round winner\n    let roundWinner: Player | null = null\n    if (playerWins > opponentWins) {\n      roundWinner = \"player\"\n      state.playerWins += 1\n    } else if (opponentWins > playerWins) {\n      roundWinner = \"opponent\"\n      state.opponentWins += 1\n    }\n\n    // Update UI\n    setRoundWinner(roundWinner)\n    setShowRoundResult(true)\n\n    // Add to battle log\n    if (roundWinner === \"player\") {\n      addBattleLog(\"• You won this battle!\")\n    } else if (roundWinner === \"opponent\") {\n      addBattleLog(\"• Opponent won this battle!\")\n    } else {\n      addBattleLog(\"• Battle ended in a tie!\")\n    }\n\n    // Reset for next battle\n    state.round += 1\n    state.playerHealth = 100\n    state.opponentHealth = 100\n    state.playerUsedDefense = false\n    state.opponentUsedDefense = false\n    state.currentRoundResults = []\n    state.currentBattle += 1\n\n    // Check if duel is over\n    if (state.playerWins >= 2 || state.opponentWins >= 2) {\n      setBattleWinner(state.playerWins >= 2 ? \"player\" : \"opponent\")\n      setBattleEnded(true)\n      setShowBattleResult(true)\n    }\n  }\n\n  // Handle casting a spell\n  const castSpell = (element: Element, level: SpellLevel, useDefense = false) => {\n    if (!socketRef.current || !roomId) {\n      // Fallback to local spell casting if not connected\n      if (!isConnected) {\n        simulateLocalRound(element, level, useDefense)\n      }\n      return\n    }\n\n    // Send spell to server\n    socketRef.current.emit(\"cast_spell\", {\n      roomId,\n      element,\n      level,\n      useDefense,\n    })\n\n    // Add to battle log\n    addBattleLog(`• You cast ${element} level ${level}${useDefense ? \" with defense\" : \"\"}`)\n    setWaitingForOpponentMove(true)\n  }\n\n  // Simulate a local round for offline testing\n  const simulateLocalRound = (playerElement: Element, playerLevel: SpellLevel, useDefense: boolean) => {\n    // Generate opponent's move\n    const elements: Element[] = [\"inferno\", \"glacius\", \"ventus\"]\n    const opponentElement = elements[Math.floor(Math.random() * elements.length)]\n    const opponentLevel = [1, 2, 3][Math.floor(Math.random() * 3)] as SpellLevel\n    const opponentUseDefense = Math.random() > 0.8 && !battleState.opponentUsedDefense\n\n    // Calculate result\n    const { winner, damage } = calculateDamage(playerElement, playerLevel, opponentElement, opponentLevel)\n\n    // Check if defense is used\n    const isVoid = (useDefense && winner === \"opponent\") || (opponentUseDefense && winner === \"player\")\n\n    // Create result object\n    const result: RoundResult = {\n      winner: isVoid ? null : winner,\n      playerElement,\n      playerLevel,\n      opponentElement,\n      opponentLevel,\n      damage,\n      isVoid,\n    }\n\n    // Update battle log\n    addBattleLog(\n      `• Opponent cast ${opponentElement} level ${opponentLevel}${opponentUseDefense ? \" with defense\" : \"\"}`,\n    )\n\n    // Update defense used flags\n    setBattleState((prev) => ({\n      ...prev,\n      playerUsedDefense: prev.playerUsedDefense || useDefense,\n      opponentUsedDefense: prev.opponentUsedDefense || opponentUseDefense,\n    }))\n\n    // Process result\n    handleRoundResult(result)\n  }\n\n  // Continue to next round\n  const continueToNextRound = () => {\n    setShowRoundResult(false)\n    if (socketRef.current && roomId) {\n      socketRef.current.emit(\"next_round\", { roomId })\n    }\n    addBattleLog(`• Battle ${battleState.currentBattle} starting...`)\n  }\n\n  // End battle\n  const endBattle = () => {\n    setShowBattleResult(false)\n    if (socketRef.current && roomId) {\n      socketRef.current.emit(\"leave_room\", { roomId })\n    }\n  }\n\n  // Reset battle\n  const resetBattle = () => {\n    setBattleState({\n      round: 1,\n      playerHealth: 100,\n      opponentHealth: 100,\n      playerWins: 0,\n      opponentWins: 0,\n      playerUsedDefense: false,\n      opponentUsedDefense: false,\n      currentRoundResults: [],\n      battleLog: [\"• Battle begins! Prepare your spells...\"],\n      currentBattle: 1,\n    })\n    setBattleEnded(false)\n    setBattleWinner(null)\n    setRoundWinner(null)\n    setShowBattleResult(false)\n  }\n\n  // Quick join battle\n  const quickJoinBattle = () => {\n    if (socketRef.current) {\n      socketRef.current.emit(\"quick_join\")\n      addBattleLog(\"• Searching for opponent...\")\n    }\n  }\n\n  // Create a new room\n  const createRoom = () => {\n    if (socketRef.current) {\n      socketRef.current.emit(\"join_room\", `room_${Math.random().toString(36).substr(2, 6)}`)\n      addBattleLog(\"• Creating new battle room...\")\n    }\n  }\n\n  // Join specific room\n  const joinRoom = (roomId: string) => {\n    if (socketRef.current) {\n      socketRef.current.emit(\"join_room\", roomId)\n      addBattleLog(`• Joining room ${roomId}...`)\n    }\n  }\n\n  // Toggle spectator mode\n  const toggleSpectatorMode = () => {\n    setIsSpectatorMode(!isSpectatorMode)\n  }\n\n  // Format socket ID for display (shortened version)\n  const formatSocketId = (socketId: string | null) => {\n    if (!socketId) return \"Unknown\"\n    return socketId.substring(0, 6) + \"...\" + socketId.substring(socketId.length - 4)\n  }\n\n  return (\n    <div className=\"min-h-screen bg-[#0a0a1a] text-gray-100 relative overflow-hidden pt-16\">\n      {/* Magical sigils on the ground */}\n      <div className=\"absolute inset-0 z-0\">\n        <div className=\"absolute top-1/4 left-1/4 w-64 h-64 border border-purple-900/20 rounded-full\"></div>\n        <div className=\"absolute top-1/4 left-1/4 w-96 h-96 border border-purple-900/10 rounded-full\"></div>\n        <div className=\"absolute top-1/4 left-1/4 w-128 h-128 border border-purple-900/5 rounded-full\"></div>\n\n        <div className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-full h-full max-w-4xl max-h-4xl\">\n          <svg viewBox=\"0 0 100 100\" className=\"w-full h-full opacity-5\">\n            <path d=\"M50 0 L100 50 L50 100 L0 50 Z\" fill=\"none\" stroke=\"rgb(139, 92, 246)\" strokeWidth=\"0.2\" />\n            <path d=\"M50 10 L90 50 L50 90 L10 50 Z\" fill=\"none\" stroke=\"rgb(139, 92, 246)\" strokeWidth=\"0.2\" />\n            <circle cx=\"50\" cy=\"50\" r=\"40\" fill=\"none\" stroke=\"rgb(139, 92, 246)\" strokeWidth=\"0.2\" />\n            <circle cx=\"50\" cy=\"50\" r=\"30\" fill=\"none\" stroke=\"rgb(139, 92, 246)\" strokeWidth=\"0.2\" />\n            <circle cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke=\"rgb(139, 92, 246)\" strokeWidth=\"0.2\" />\n          </svg>\n        </div>\n      </div>\n\n      <header className=\"container mx-auto pt-4 px-4 z-10 relative flex justify-between items-center\">\n        <Link href=\"/deck\" className=\"text-gray-400 hover:text-white transition-colors flex items-center\">\n          <ArrowLeft className=\"h-4 w-4 mr-1\" />\n          <span className=\"text-sm\">Return to Deck</span>\n        </Link>\n\n        <div className=\"flex items-center space-x-2\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            className=\"bg-transparent border-gray-800 hover:bg-gray-800 flex items-center gap-1\"\n            onClick={() => setShowConnectionDialog(true)}\n          >\n            <Wifi className=\"h-3 w-3\" />\n            <span>Connect</span>\n          </Button>\n\n          <div className=\"flex items-center space-x-2 bg-gray-900/50 border border-gray-800 rounded-full px-3 py-1\">\n            <div className={`w-3 h-3 rounded-full ${isConnected ? \"bg-green-500\" : \"bg-red-500\"}`}></div>\n            <span className=\"text-sm font-medium\">{isConnected ? \"Connected\" : \"Disconnected\"}</span>\n          </div>\n\n          <div className=\"flex items-center space-x-2 bg-gray-900/50 border border-gray-800 rounded-full px-3 py-1\">\n            <div className=\"w-3 h-3 rounded-full bg-purple-500 animate-pulse\"></div>\n            <span className=\"text-sm font-medium\">\n              Battle {battleState.currentBattle} • Round {battleState.round}\n            </span>\n          </div>\n\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            className=\"bg-transparent border-gray-800 hover:bg-gray-800 flex items-center gap-1\"\n            onClick={toggleSpectatorMode}\n          >\n            {isSpectatorMode ? \"Duel Mode\" : \"Spectate\"}\n            <Users className=\"h-3 w-3 ml-1\" />\n          </Button>\n        </div>\n      </header>\n\n      <main className=\"container mx-auto px-4 py-4 z-10 relative\">\n        {/* Connection Dialog */}\n        <Dialog open={showConnectionDialog} onOpenChange={setShowConnectionDialog}>\n          <DialogContent className=\"bg-gray-900 border border-gray-800 text-gray-100 max-w-md\">\n            <DialogHeader>\n              <DialogTitle className=\"font-serif text-2xl\">Connect to Server</DialogTitle>\n              <DialogDescription>Enter the IP address of the server running on your local network</DialogDescription>\n            </DialogHeader>\n\n            <div className=\"grid gap-4 py-4\">\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"ip\" className=\"text-right\">\n                  Server IP\n                </Label>\n                <Input\n                  id=\"ip\"\n                  placeholder=\"192.168.x.x\"\n                  className=\"col-span-3\"\n                  value={customServerIp}\n                  onChange={(e) => setCustomServerIp(e.target.value)}\n                />\n              </div>\n            </div>\n\n            <DialogFooter className=\"gap-2\">\n              <Button\n                variant=\"outline\"\n                className=\"flex-1 bg-transparent border-gray-700 hover:bg-gray-800\"\n                onClick={() => {\n                  setCustomServerIp(\"localhost\")\n                  setShowConnectionDialog(false)\n                }}\n              >\n                Localhost\n              </Button>\n              <Button\n                className=\"flex-1 bg-gradient-to-r from-purple-600 to-indigo-600 hover:from-purple-700 hover:to-indigo-700\"\n                onClick={() => setShowConnectionDialog(false)}\n              >\n                Connect\n              </Button>\n            </DialogFooter>\n          </DialogContent>\n        </Dialog>\n\n        {/* Room Dialog */}\n        <Dialog open={showRoomDialog} onOpenChange={setShowRoomDialog}>\n          <DialogContent className=\"bg-gray-900 border border-gray-800 text-gray-100 max-w-md\">\n            <DialogHeader>\n              <DialogTitle className=\"font-serif text-2xl\">Join or Create Room</DialogTitle>\n              <DialogDescription>Enter a room code or create a new one</DialogDescription>\n            </DialogHeader>\n\n            <div className=\"grid gap-4 py-4\">\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"roomCode\" className=\"text-right\">\n                  Room Code\n                </Label>\n                <Input\n                  id=\"roomCode\"\n                  placeholder=\"Enter room code\"\n                  className=\"col-span-3\"\n                  value={roomCodeInput}\n                  onChange={(e) => setRoomCodeInput(e.target.value)}\n                />\n              </div>\n            </div>\n\n            <DialogFooter className=\"gap-2\">\n              <Button\n                variant=\"outline\"\n                className=\"flex-1 bg-transparent border-gray-700 hover:bg-gray-800\"\n                onClick={() => {\n                  createRoom()\n                  setShowRoomDialog(false)\n                }}\n              >\n                Create Room\n              </Button>\n              <Button\n                className=\"flex-1 bg-gradient-to-r from-purple-600 to-indigo-600 hover:from-purple-700 hover:to-indigo-700\"\n                onClick={() => {\n                  joinRoom(roomCodeInput)\n                  setShowRoomDialog(false)\n                }}\n                disabled={!roomCodeInput}\n              >\n                Join Room\n              </Button>\n            </DialogFooter>\n          </DialogContent>\n        </Dialog>\n\n        {/* Waiting for connection screen */}\n        {!isConnected && !roomId && (\n          <div className=\"fixed inset-0 bg-black/70 z-50 flex items-center justify-center\">\n            <div className=\"bg-gray-900 border border-gray-800 rounded-lg p-8 max-w-md text-center\">\n              <h2 className=\"text-2xl font-serif mb-4\">Welcome to Wizard Battle</h2>\n              <p className=\"text-gray-400 mb-6\">Connect to a server to begin</p>\n\n              <div className=\"grid gap-4\">\n                <Button\n                  className=\"bg-gradient-to-r from-purple-600 to-indigo-600\"\n                  onClick={() => setShowConnectionDialog(true)}\n                >\n                  <Wifi className=\"h-4 w-4 mr-2\" />\n                  Connect to Server\n                </Button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Waiting for room screen */}\n        {isConnected && !roomId && (\n          <div className=\"fixed inset-0 bg-black/70 z-50 flex items-center justify-center\">\n            <div className=\"bg-gray-900 border border-gray-800 rounded-lg p-8 max-w-md text-center\">\n              <h2 className=\"text-2xl font-serif mb-4\">Welcome to Wizard Battle</h2>\n              <p className=\"text-gray-400 mb-6\">Connected to server at {customServerIp || \"localhost\"}</p>\n\n              <div className=\"grid gap-4\">\n                <Button\n                  className=\"bg-gradient-to-r from-purple-600 to-indigo-600\"\n                  onClick={() => setShowRoomDialog(true)}\n                >\n                  Create or Join Room\n                </Button>\n                <Button\n                  variant=\"outline\"\n                  className=\"bg-transparent border-gray-700 hover:bg-gray-800\"\n                  onClick={quickJoinBattle}\n                >\n                  Quick Join Battle\n                </Button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Waiting for opponent screen */}\n        {isWaitingForOpponent && roomId && (\n          <div className=\"fixed inset-0 bg-black/70 z-50 flex items-center justify-center\">\n            <div className=\"bg-gray-900 border border-gray-800 rounded-lg p-8 max-w-md text-center\">\n              <h2 className=\"text-2xl font-serif mb-4\">Waiting for Opponent</h2>\n              <p className=\"text-gray-400 mb-6\">Your battle room ID: {roomId}</p>\n              <div className=\"animate-pulse flex justify-center mb-6\">\n                <div className=\"w-16 h-16 border-4 border-purple-500 border-t-transparent rounded-full\"></div>\n              </div>\n              <p className=\"text-sm text-gray-400 mb-4\">\n                Share this room code with your friend: <span className=\"font-mono text-purple-400\">{roomId}</span>\n              </p>\n              <Button\n                variant=\"outline\"\n                className=\"bg-transparent border-gray-700 hover:bg-gray-800\"\n                onClick={quickJoinBattle}\n              >\n                Quick Join Battle\n              </Button>\n            </div>\n          </div>\n        )}\n\n        {/* Spectator Mode UI */}\n        {isSpectatorMode && (\n          <div className=\"bg-gray-900/30 border border-gray-800 rounded-lg p-4 mb-4\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <div className=\"flex items-center\">\n                <Users className=\"h-5 w-5 text-blue-400 mr-2\" />\n                <span className=\"font-medium\">Spectator Mode</span>\n                <Badge variant=\"outline\" className=\"ml-2 bg-blue-900/20 border-blue-500/30 text-blue-300\">\n                  {spectatorCount} Watching\n                </Badge>\n              </div>\n\n              <div className=\"flex items-center\">\n                <span className=\"font-medium\">Total Bets: {totalBetAmount} WIZ</span>\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\n              <div className=\"bg-gray-900/50 border border-gray-800 rounded-lg p-3\">\n                <h3 className=\"text-sm font-medium mb-2 flex items-center\">\n                  <Image\n                    src=\"/placeholder.svg?height=30&width=30\"\n                    alt=\"Player\"\n                    width={20}\n                    height={20}\n                    className=\"rounded-full mr-2\"\n                  />\n                  {formatSocketId(mySocketId)}\n                </h3>\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center\">\n                    <span className=\"text-xs text-gray-400 mr-2\">Odds:</span>\n                    <span className=\"text-xs text-green-400\">1.8x</span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <span className=\"text-xs text-gray-400 mr-2\">Bets:</span>\n                    <span className=\"text-xs\">{Math.round(totalBetAmount * 0.6)} WIZ</span>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"bg-gray-900/50 border border-gray-800 rounded-lg p-3\">\n                <h3 className=\"text-sm font-medium mb-2 flex items-center\">\n                  <Image\n                    src=\"/placeholder.svg?height=30&width=30\"\n                    alt=\"Opponent\"\n                    width={20}\n                    height={20}\n                    className=\"rounded-full mr-2\"\n                  />\n                  {formatSocketId(opponentSocketId) || \"Waiting for opponent...\"}\n                </h3>\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center\">\n                    <span className=\"text-xs text-gray-400 mr-2\">Odds:</span>\n                    <span className=\"text-xs text-green-400\">2.2x</span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <span className=\"text-xs text-gray-400 mr-2\">Bets:</span>\n                    <span className=\"text-xs\">{Math.round(totalBetAmount * 0.4)} WIZ</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {!isWalletConnected ? (\n              <ConnectWallet onConnect={() => setIsWalletConnected(true)} />\n            ) : (\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <Button className=\"bg-gradient-to-r from-purple-600 to-indigo-600 hover:from-purple-700 hover:to-indigo-700\">\n                  Bet on {formatSocketId(mySocketId)}\n                </Button>\n                <Button className=\"bg-gradient-to-r from-red-600 to-orange-600 hover:from-red-700 hover:to-orange-700\">\n                  Bet on {formatSocketId(opponentSocketId) || \"Opponent\"}\n                </Button>\n              </div>\n            )}\n          </div>\n        )}\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-7 gap-4\">\n          {/* Player Side */}\n          <div className=\"bg-gray-900/30 border border-gray-800 rounded-lg p-4 order-2 lg:order-1 lg:col-span-2\">\n            <div className=\"flex justify-between items-center mb-2\">\n              <h2 className=\"font-serif text-xl\">Your Wizard</h2>\n              <div className=\"text-xs text-gray-400\">Level 42</div>\n            </div>\n\n            {/* Hearts display */}\n            <div className=\"flex justify-center mb-2\">\n              {[...Array(2)].map((_, i) => (\n                <Heart\n                  key={i}\n                  className={`h-6 w-6 ${i < (2 - battleState.playerWins) ? \"text-red-500 fill-red-500\" : \"text-gray-600\"} mx-1`}\n                />\n              ))}\n            </div>\n\n            <div className=\"flex flex-col items-center mb-4\">\n              <div className=\"w-24 h-24 bg-gradient-to-br from-purple-900/50 to-indigo-900/50 rounded-full mb-3 flex items-center justify-center border border-purple-500/30\">\n                <Image\n                  src=\"/placeholder.svg?height=80&width=80\"\n                  alt=\"Player Avatar\"\n                  width={80}\n                  height={80}\n                  className=\"rounded-full\"\n                />\n              </div>\n              <div className=\"text-center\">\n                <p className=\"font-medium\">{formatSocketId(mySocketId)}</p>\n                <p className=\"text-xs text-purple-400\">Phoenix Patronus • Elder Wand</p>\n              </div>\n            </div>\n\n            <div className=\"space-y-3 mb-4\">\n              <div>\n                <div className=\"flex justify-between text-sm mb-1\">\n                  <span>Health</span>\n                  <span>{battleState.playerHealth}/100</span>\n                </div>\n                <Progress\n                  value={battleState.playerHealth}\n                  className=\"h-2 bg-gray-800\"\n                  indicatorClassName=\"bg-gradient-to-r from-purple-500 to-indigo-500\"\n                />\n              </div>\n            </div>\n\n            {/* Active Effects */}\n            <div className=\"border-t border-gray-800 pt-3 mb-4\">\n              <h3 className=\"text-sm font-medium mb-2\">Active Effects:</h3>\n              <div className=\"flex flex-wrap gap-1\">\n                {battleState.playerUsedDefense && (\n                  <div className=\"bg-blue-900/20 border border-blue-900/30 rounded px-2 py-1 text-xs flex items-center\">\n                    <Shield className=\"h-3 w-3 mr-1 text-blue-400\" />\n                    <span>Defense Used</span>\n                  </div>\n                )}\n                {!battleState.playerUsedDefense && <div className=\"text-xs text-gray-400\">No active effects</div>}\n              </div>\n            </div>\n\n            {/* Battle Log */}\n            <div className=\"bg-gray-900/50 border border-gray-800 rounded-lg p-3 mb-4\">\n              <div className=\"flex justify-between items-center mb-2\">\n                <div className=\"text-sm text-gray-400\">Battle Log</div>\n                <div className=\"text-xs px-2 py-0.5 rounded-full bg-gray-800 text-gray-300\">Live</div>\n              </div>\n\n              <div className=\"h-28 overflow-y-auto space-y-1 text-sm mb-1 font-mono battle-log\">\n                {battleState.battleLog.map((log, index) => (\n                  <p\n                    key={index}\n                    className={`${\n                      log.includes(\"You cast\") || log.includes(\"You won\")\n                        ? \"text-purple-400\"\n                        : log.includes(\"Opponent\")\n                          ? \"text-red-400\"\n                          : \"text-gray-400\"\n                    }`}\n                  >\n                    {log}\n                  </p>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          {/* Battle Arena - Center */}\n          <div className=\"bg-gray-900/30 border border-gray-800 rounded-lg p-4 order-1 lg:order-2 lg:col-span-3\">\n            {/* Battle Arena */}\n            <div className=\"relative\">\n              <div className=\"absolute inset-0 bg-gradient-to-b from-transparent to-purple-900/10 rounded-lg pointer-events-none\"></div>\n\n              {/* Player Hearts and Health */}\n              <div className=\"flex justify-between items-center mb-6\">\n                <div className=\"flex items-center\">\n                  <div className=\"w-8 h-8 bg-gradient-to-br from-purple-900/50 to-indigo-900/50 rounded-full flex items-center justify-center border border-purple-500/30\">\n                    <Image\n                      src=\"/placeholder.svg?height=30&width=30\"\n                      alt=\"Player\"\n                      width={30}\n                      height={30}\n                      className=\"rounded-full\"\n                    />\n                  </div>\n                  <Progress\n                    value={battleState.playerHealth}\n                    className=\"w-24 h-1.5 bg-gray-800 ml-2\"\n                    indicatorClassName=\"bg-gradient-to-r from-purple-500 to-indigo-500\"\n                  />\n                </div>\n\n                <div className=\"flex items-center\">\n                  <Progress\n                    value={battleState.opponentHealth}\n                    className=\"w-24 h-1.5 bg-gray-800 mr-2\"\n                    indicatorClassName=\"bg-gradient-to-r from-red-500 to-rose-500\"\n                  />\n                  <div className=\"w-8 h-8 bg-gradient-to-br from-red-900/50 to-orange-900/50 rounded-full flex items-center justify-center border border-red-500/30\">\n                    <Image\n                      src=\"/placeholder.svg?height=30&width=30\"\n                      alt=\"Opponent\"\n                      width={30}\n                      height={30}\n                      className=\"rounded-full\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              {/* Battle Visualization */}\n              <div className=\"flex justify-center items-center h-40 relative\">\n                <div className=\"w-16 h-16 bg-purple-500/10 border border-purple-500/20 rounded-full flex items-center justify-center relative\">\n                  <div className=\"absolute inset-0 rounded-full bg-purple-500/5 animate-ping\"></div>\n                  <span className=\"text-2xl\">⚡</span>\n                </div>\n              </div>\n            </div>\n\n            {/* Spell Cards */}\n            <div className=\"mt-6\">\n              <h3 className=\"text-sm font-medium mb-3\">Cast Your Spell:</h3>\n\n              {waitingForOpponentMove ? (\n                <div className=\"text-center py-4\">\n                  <div className=\"animate-pulse flex justify-center mb-2\">\n                    <div className=\"w-8 h-8 border-2 border-purple-500 border-t-transparent rounded-full\"></div>\n                  </div>\n                  <p className=\"text-sm text-gray-400\">Waiting for opponent's move...</p>\n                </div>\n              ) : (\n                <div className=\"grid grid-cols-3 gap-3\">\n                  <BattleCard\n                    element=\"inferno\"\n                    name=\"Inferno\"\n                    description=\"Fire beats Ice, loses to Wind\"\n                    icon={<Flame className=\"h-5 w-5 text-red-400\" />}\n                    color=\"red\"\n                    onCast={(level, useDefense) => castSpell(\"inferno\", level, useDefense)}\n                    canUseDefense={!battleState.playerUsedDefense}\n                  />\n\n                  <BattleCard\n                    element=\"glacius\"\n                    name=\"Glacius\"\n                    description=\"Ice beats Wind, loses to Fire\"\n                    icon={<Snowflake className=\"h-5 w-5 text-blue-400\" />}\n                    color=\"blue\"\n                    onCast={(level, useDefense) => castSpell(\"glacius\", level, useDefense)}\n                    canUseDefense={!battleState.playerUsedDefense}\n                  />\n\n                  <BattleCard\n                    element=\"ventus\"\n                    name=\"Ventus\"\n                    description=\"Wind beats Fire, loses to Ice\"\n                    icon={<Wind className=\"h-5 w-5 text-green-400\" />}\n                    color=\"green\"\n                    onCast={(level, useDefense) => castSpell(\"ventus\", level, useDefense)}\n                    canUseDefense={!battleState.playerUsedDefense}\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Opponent Side */}\n          <div className=\"bg-gray-900/30 border border-gray-800 rounded-lg p-4 order-3 lg:col-span-2\">\n            <div className=\"flex justify-between items-center mb-2\">\n              <h2 className=\"font-serif text-xl\">Opponent</h2>\n              <div className=\"text-xs text-gray-400\">Level 40</div>\n            </div>\n\n            {/* Hearts display */}\n            <div className=\"flex justify-center mb-2\">\n              {[...Array(2)].map((_, i) => (\n                <Heart\n                  key={i}\n                  className={`h-6 w-6 ${i < (2 - battleState.opponentWins) ? \"text-red-500 fill-red-500\" : \"text-gray-600\"} mx-1`}\n                />\n              ))}\n            </div>\n\n            <div className=\"flex flex-col items-center mb-4\">\n              <div className=\"w-24 h-24 bg-gradient-to-br from-red-900/50 to-orange-900/50 rounded-full mb-3 flex items-center justify-center border border-red-500/30\">\n                <Image\n                  src=\"/placeholder.svg?height=80&width=80\"\n                  alt=\"Opponent Avatar\"\n                  width={80}\n                  height={80}\n                  className=\"rounded-full\"\n                />\n              </div>\n              <div className=\"text-center\">\n                <p className=\"font-medium\">{formatSocketId(opponentSocketId) || \"Waiting for opponent...\"}</p>\n                <p className=\"text-xs text-red-400\">Wolf Patronus • Dragon Heartstring Wand</p>\n              </div>\n            </div>\n\n            <div className=\"space-y-3 mb-4\">\n              <div>\n                <div className=\"flex justify-between text-sm mb-1\">\n                  <span>Health</span>\n                  <span>{battleState.opponentHealth}/100</span>\n                </div>\n                <Progress\n                  value={battleState.opponentHealth}\n                  className=\"h-2 bg-gray-800\"\n                  indicatorClassName=\"bg-gradient-to-r from-red-500 to-rose-500\"\n                />\n              </div>\n            </div>\n\n            {/* Active Effects */}\n            <div className=\"border-t border-gray-800 pt-3\">\n              <h3 className=\"text-sm font-medium mb-2\">Active Effects:</h3>\n              <div className=\"flex flex-wrap gap-1\">\n                {battleState.opponentUsedDefense && (\n                  <div className=\"bg-red-900/20 border border-red-900/30 rounded px-2 py-1 text-xs flex items-center\">\n                    <Shield className=\"h-3 w-3 mr-1 text-red-400\" />\n                    <span>Defense Used</span>\n                  </div>\n                )}\n                {!battleState.opponentUsedDefense && <div className=\"text-xs text-gray-400\">No active effects</div>}\n              </div>\n            </div>\n\n            {/* Game Rules */}\n            <div className=\"mt-6 bg-gray-900/50 border border-gray-800 rounded-lg p-3\">\n              <h3 className=\"text-sm font-medium mb-2\">Game Rules:</h3>\n              <ul className=\"text-xs text-gray-400 space-y-1\">\n                <li>• First to win 2 battles wins the duel</li>\n                <li>• Each battle consists of 5 rounds</li>\n                <li>• Fire beats Ice, Ice beats Wind, Wind beats Fire</li>\n                <li>• Level 1: 20 damage, Level 2: 25 damage, Level 3: 30 damage</li>\n                <li>• Defense card can be used once per battle</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </main>\n\n      {/* Round Result Dialog */}\n      <Dialog open={showRoundResult} onOpenChange={setShowRoundResult}>\n        <DialogContent className=\"bg-gray-900 border border-gray-800 text-gray-100 max-w-md\">\n          <DialogHeader>\n            <DialogTitle className=\"font-serif text-2xl text-center\">\n              Battle {battleState.currentBattle - 1} Complete!\n            </DialogTitle>\n            <DialogDescription className=\"text-center\">\n              {roundWinner === \"player\" ? (\n                <span className=\"text-purple-400\">You won this battle!</span>\n              ) : roundWinner === \"opponent\" ? (\n                <span className=\"text-red-400\">Your opponent won this battle!</span>\n              ) : (\n                <span className=\"text-yellow-400\">Battle ended in a tie!</span>\n              )}\n            </DialogDescription>\n          </DialogHeader>\n\n          <div className=\"flex justify-center items-center py-6\">\n            {roundWinner === \"player\" ? (\n              <div className=\"w-24 h-24 bg-purple-900/30 rounded-full flex items-center justify-center\">\n                <Trophy className=\"h-12 w-12 text-yellow-400\" />\n              </div>\n            ) : roundWinner === \"opponent\" ? (\n              <div className=\"w-24 h-24 bg-red-900/30 rounded-full flex items-center justify-center\">\n                <Shield className=\"h-12 w-12 text-red-400\" />\n              </div>\n            ) : (\n              <div className=\"w-24 h-24 bg-yellow-900/30 rounded-full flex items-center justify-center\">\n                <Shield className=\"h-12 w-12 text-yellow-400\" />\n              </div>\n            )}\n          </div>\n\n          <div className=\"flex justify-between items-center px-4 py-2 bg-gray-800/50 rounded-lg mb-4\">\n            <div className=\"flex items-center\">\n              <div className=\"flex mr-2\">\n                {[...Array(2)].map((_, i) => (\n                  <Heart\n                    key={i}\n                    className={`h-5 w-5 ${i < (2 - battleState.playerWins) ? \"text-red-500 fill-red-500\" : \"text-gray-600\"} mr-1`}\n                  />\n                ))}\n              </div>\n              <span>{formatSocketId(mySocketId)}</span>\n            </div>\n            <div className=\"text-gray-400\">vs</div>\n            <div className=\"flex items-center\">\n              <span>{formatSocketId(opponentSocketId) || \"Opponent\"}</span>\n              <div className=\"flex ml-2\">\n                {[...Array(2)].map((_, i) => (\n                  <Heart\n                    key={i}\n                    className={`h-5 w-5 ${i < (2 - battleState.opponentWins) ? \"text-red-500 fill-red-500\" : \"text-gray-600\"} ml-1`}\n                  />\n                ))}\n              </div>\n            </div>\n          </div>\n\n          <DialogFooter>\n            <Button\n              className=\"w-full bg-gradient-to-r from-purple-600 to-indigo-600 hover:from-purple-700 hover:to-indigo-700\"\n              onClick={continueToNextRound}\n            >\n              Continue to Battle {battleState.currentBattle}\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      {/* Battle Result Dialog */}\n      <Dialog open={showBattleResult} onOpenChange={setShowBattleResult}>\n        <DialogContent className=\"bg-gray-900 border border-gray-800 text-gray-100 max-w-md\">\n          <DialogHeader>\n            <DialogTitle className=\"font-serif text-2xl text-center\">Duel Complete!</DialogTitle>\n            <DialogDescription className=\"text-center\">\n              {battleWinner === \"player\" ? (\n                <span className=\"text-purple-400\">Victory! You have defeated your opponent!</span>\n              ) : (\n                <span className=\"text-red-400\">Defeat! Your opponent has bested you!</span>\n              )}\n            </DialogDescription>\n          </DialogHeader>\n\n          <div className=\"flex justify-center items-center py-8\">\n            {battleWinner === \"player\" ? (\n              <div className=\"w-32 h-32 bg-purple-900/30 rounded-full flex items-center justify-center\">\n                <Trophy className=\"h-16 w-16 text-yellow-400\" />\n              </div>\n            ) : (\n              <div className=\"w-32 h-32 bg-red-900/30 rounded-full flex items-center justify-center\">\n                <Shield className=\"h-16 w-16 text-red-400\" />\n              </div>\n            )}\n          </div>\n\n          <div className=\"text-center mb-6\">\n            <p className=\"text-lg font-medium mb-2\">\n              {battleWinner === \"player\" ? \"Congratulations, Wizard!\" : \"Better luck next time, Wizard!\"}\n            </p>\n            <p className=\"text-gray-400\">\n              {battleWinner === \"player\"\n                ? \"Your mastery of the arcane arts has proven superior.\"\n                : \"Even the greatest wizards face defeat. Learn and grow stronger.\"}\n            </p>\n          </div>\n\n          <DialogFooter className=\"flex flex-col sm:flex-row gap-2\">\n            <Button\n              variant=\"outline\"\n              className=\"flex-1 bg-transparent border-gray-700 hover:bg-gray-800\"\n              onClick={endBattle}\n            >\n              Return to Deck\n            </Button>\n            <Button\n              className=\"flex-1 bg-gradient-to-r from-purple-600 to-indigo-600 hover:from-purple-700 hover:to-indigo-700\"\n              onClick={resetBattle}\n            >\n              Duel Again\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      <script\n        dangerouslySetInnerHTML={{\n          __html: `\n          document.addEventListener('DOMContentLoaded', function() {\n            // Add subtle hover effects to spell buttons\n            const spellButtons = document.querySelectorAll('button');\n            spellButtons.forEach(button => {\n              button.addEventListener('mouseenter', () => {\n                button.style.transform = 'translateY(-2px)';\n                button.style.transition = 'all 0.2s ease';\n              });\n              \n              button.addEventListener('mouseleave', () => {\n                button.style.transform = 'translateY(0)';\n              });\n            });\n          });\n        `,\n        }}\n      />\n    </div>\n  )\n}\n\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AArBA;;;;;;;;;;;;;;;AAyDe,SAAS;IACtB,uBAAuB;IACvB,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAiB;IACxC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IACpD,MAAM,CAAC,sBAAsB,wBAAwB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjE,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,sBAAsB,wBAAwB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjE,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAC5D,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IACxE,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IAE/D,eAAe;IACf,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;QAC1D,OAAO;QACP,cAAc;QACd,gBAAgB;QAChB,YAAY;QACZ,cAAc;QACd,mBAAmB;QACnB,qBAAqB;QACrB,qBAAqB,EAAE;QACvB,WAAW;YAAC;SAAiC;QAC7C,eAAe;IACjB;IAEA,WAAW;IACX,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAkB;IACvE,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAc;IAC/D,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAC9D,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAChE,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3D,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,wBAAwB,0BAA0B,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAErE,kCAAkC;IAClC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,WAAW,iBACb,CAAC,OAAO,EAAE,eAAe,KAAK,CAAC,GAC/B,QAAQ,GAAG,CAAC,qBAAqB,IAAI;QAEzC,8BAA8B;QAC9B,MAAM,SAAS,CAAA,GAAA,wLAAA,CAAA,KAAE,AAAD,EAAE,UAAU;YAC1B,aAAa;YACb,sBAAsB;YACtB,mBAAmB;QACrB;QAEA,UAAU,OAAO,GAAG;QAEpB,kBAAkB;QAClB,OAAO,EAAE,CAAC,WAAW;YACnB,eAAe;YACf,cAAc,QAAQ;YACtB,aAAa;QACf;QAEA,OAAO,EAAE,CAAC,cAAc;YACtB,eAAe;YACf,aAAa;QACf;QAIA,OAAO,EAAE,CAAC,eAAe,CAAC;YACxB,UAAU,KAAK,MAAM;YACrB,wBAAwB,CAAC,KAAK,WAAW;YACzC,mBAAmB,KAAK,WAAW;YACnC,aAAa,CAAC,cAAc,EAAE,KAAK,MAAM,EAAE;YAC3C,IAAI,KAAK,WAAW,EAAE;gBACpB,aAAa;YACf,OAAO;gBACL,aAAa;YACf;QACF;QAEA,OAAO,EAAE,CAAC,mBAAmB;YAC3B,wBAAwB;YACxB,aAAa;QACf;QAEA,OAAO,EAAE,CAAC,mBAAmB,CAAC;YAC5B,kBAAkB;QACpB;QAEA,OAAO,EAAE,CAAC,cAAc,CAAC;YACvB,kBAAkB;QACpB;QAEA,OAAO,EAAE,CAAC,gBAAgB,CAAC;YACzB,iBAAiB;YAEjB,oDAAoD;YACpD,IAAI,WAAW,MAAM,KAAK,GAAG;gBAC3B,MAAM,WAAW,WAAW,IAAI,CAAC,CAAC,KAAO,OAAO,OAAO,EAAE;gBACzD,IAAI,UAAU;oBACZ,oBAAoB;gBACtB;YACF;QACF;QAEA,OAAO,EAAE,CAAC,eAAe;YACvB,0BAA0B;YAC1B,aAAa,CAAC,QAAQ,EAAE,YAAY,KAAK,CAAC,2BAA2B,CAAC;QACxE;QAEA,OAAO,EAAE,CAAC,gBAAgB,CAAC;YACzB,kBAAkB;YAClB,0BAA0B;QAC5B;QAEA,OAAO,EAAE,CAAC,iBAAiB,CAAC;YAC1B,gBAAgB;YAChB,eAAe;YACf,oBAAoB;YACpB,aAAa,WAAW,WAAW,0BAA0B;QAC/D;QAEA,OAAO,EAAE,CAAC,iBAAiB;YACzB,aAAa;YACb,wBAAwB;YACxB,0BAA0B;QAC5B;QAEA,OAAO,EAAE,CAAC,SAAS,CAAC;YAClB,aAAa,CAAC,SAAS,EAAE,SAAS;YAClC,0BAA0B;QAC5B;QAEA,oBAAoB;QACpB,OAAO,OAAO;QAEd,qBAAqB;QACrB,OAAO;YACL,OAAO,UAAU;QACnB;IACF,GAAG;QAAC;KAAe;IAEnB,gDAAgD;IAChD,MAAM,eAAe,CAAC;QACpB,eAAe,CAAC,OAAS,CAAC;gBACxB,GAAG,IAAI;gBACP,WAAW;uBAAI,KAAK,SAAS,CAAC,KAAK,CAAC,CAAC;oBAAI;iBAAQ;YACnD,CAAC;IACH;IAEA,8CAA8C;IAC9C,MAAM,oBAAoB,CAAC,eAAwB;QACjD,IAAI,kBAAkB,iBAAiB,OAAO;QAE9C,MAAM,gBAA0C;YAC9C,SAAS;YACT,SAAS;YACT,QAAQ;QACV;QAEA,OAAO,aAAa,CAAC,cAAc,KAAK,kBAAkB,QAAQ;IACpE;IAEA,uDAAuD;IACvD,MAAM,kBAAkB,CACtB,eACA,aACA,iBACA;QAEA,MAAM,UAAU,kBAAkB,eAAe;QAEjD,IAAI,YAAY,OAAO;YACrB,OAAO;gBAAE,QAAQ;gBAAU,QAAQ,eAAe;YAAa;QACjE,OAAO,IAAI,YAAY,QAAQ;YAC7B,OAAO;gBAAE,QAAQ;gBAAY,QAAQ,eAAe;YAAe;QACrE,OAAO;YACL,4DAA4D;YAC5D,IAAI,cAAc,eAAe;gBAC/B,OAAO;oBAAE,QAAQ;oBAAU,QAAQ,eAAe,eAAe,eAAe;gBAAe;YACjG,OAAO,IAAI,gBAAgB,aAAa;gBACtC,OAAO;oBAAE,QAAQ;oBAAY,QAAQ,eAAe,iBAAiB,eAAe;gBAAa;YACnG,OAAO;gBACL,oBAAoB;gBACpB,OAAO;oBAAE,QAAQ;oBAAM,QAAQ;gBAAE;YACnC;QACF;IACF;IAEA,kCAAkC;IAClC,MAAM,iBAAiB,CAAC;QACtB,OAAO,UAAU,IAAI,KAAK,UAAU,IAAI,KAAK;IAC/C;IAEA,mCAAmC;IACnC,MAAM,oBAAoB,CAAC;QACzB,eAAe,CAAC;YACd,MAAM,WAAW;gBAAE,GAAG,IAAI;YAAC;YAE3B,gCAAgC;YAChC,IAAI,CAAC,OAAO,MAAM,EAAE;gBAClB,IAAI,OAAO,MAAM,KAAK,UAAU;oBAC9B,SAAS,cAAc,GAAG,KAAK,GAAG,CAAC,GAAG,SAAS,cAAc,GAAG,OAAO,MAAM;gBAC/E,OAAO,IAAI,OAAO,MAAM,KAAK,YAAY;oBACvC,SAAS,YAAY,GAAG,KAAK,GAAG,CAAC,GAAG,SAAS,YAAY,GAAG,OAAO,MAAM;gBAC3E;YACF;YAEA,uBAAuB;YACvB,SAAS,mBAAmB,GAAG;mBAAI,SAAS,mBAAmB;gBAAE;aAAO;YAExE,oBAAoB;YACpB,IAAI,aAAa;YACjB,IAAI,OAAO,MAAM,EAAE;gBACjB,aAAa;YACf,OAAO,IAAI,OAAO,MAAM,KAAK,MAAM;gBACjC,aAAa;YACf,OAAO;gBACL,MAAM,SAAS,OAAO,MAAM,KAAK,WAAW,QAAQ;gBACpD,MAAM,QAAQ,OAAO,MAAM,KAAK,WAAW,aAAa;gBACxD,aAAa,CAAC,EAAE,EAAE,OAAO,OAAO,EAAE,OAAO,MAAM,CAAC,WAAW,EAAE,OAAO;YACtE;YACA,SAAS,SAAS,GAAG;mBAAI,SAAS,SAAS;gBAAE;aAAW;YAExD,wCAAwC;YACxC,IAAI,SAAS,mBAAmB,CAAC,MAAM,IAAI,GAAG;gBAC5C,qBAAqB;YACvB;YAEA,OAAO;QACT;IACF;IAEA,uDAAuD;IACvD,MAAM,uBAAuB,CAAC;QAC5B,aAAa;QACb,MAAM,aAAa,MAAM,mBAAmB,CAAC,MAAM,CAAC,CAAC,IAAM,EAAE,MAAM,KAAK,UAAU,MAAM;QACxF,MAAM,eAAe,MAAM,mBAAmB,CAAC,MAAM,CAAC,CAAC,IAAM,EAAE,MAAM,KAAK,YAAY,MAAM;QAE5F,yBAAyB;QACzB,IAAI,cAA6B;QACjC,IAAI,aAAa,cAAc;YAC7B,cAAc;YACd,MAAM,UAAU,IAAI;QACtB,OAAO,IAAI,eAAe,YAAY;YACpC,cAAc;YACd,MAAM,YAAY,IAAI;QACxB;QAEA,YAAY;QACZ,eAAe;QACf,mBAAmB;QAEnB,oBAAoB;QACpB,IAAI,gBAAgB,UAAU;YAC5B,aAAa;QACf,OAAO,IAAI,gBAAgB,YAAY;YACrC,aAAa;QACf,OAAO;YACL,aAAa;QACf;QAEA,wBAAwB;QACxB,MAAM,KAAK,IAAI;QACf,MAAM,YAAY,GAAG;QACrB,MAAM,cAAc,GAAG;QACvB,MAAM,iBAAiB,GAAG;QAC1B,MAAM,mBAAmB,GAAG;QAC5B,MAAM,mBAAmB,GAAG,EAAE;QAC9B,MAAM,aAAa,IAAI;QAEvB,wBAAwB;QACxB,IAAI,MAAM,UAAU,IAAI,KAAK,MAAM,YAAY,IAAI,GAAG;YACpD,gBAAgB,MAAM,UAAU,IAAI,IAAI,WAAW;YACnD,eAAe;YACf,oBAAoB;QACtB;IACF;IAEA,yBAAyB;IACzB,MAAM,YAAY,CAAC,SAAkB,OAAmB,aAAa,KAAK;QACxE,IAAI,CAAC,UAAU,OAAO,IAAI,CAAC,QAAQ;YACjC,mDAAmD;YACnD,IAAI,CAAC,aAAa;gBAChB,mBAAmB,SAAS,OAAO;YACrC;YACA;QACF;QAEA,uBAAuB;QACvB,UAAU,OAAO,CAAC,IAAI,CAAC,cAAc;YACnC;YACA;YACA;YACA;QACF;QAEA,oBAAoB;QACpB,aAAa,CAAC,WAAW,EAAE,QAAQ,OAAO,EAAE,QAAQ,aAAa,kBAAkB,IAAI;QACvF,0BAA0B;IAC5B;IAEA,6CAA6C;IAC7C,MAAM,qBAAqB,CAAC,eAAwB,aAAyB;QAC3E,2BAA2B;QAC3B,MAAM,WAAsB;YAAC;YAAW;YAAW;SAAS;QAC5D,MAAM,kBAAkB,QAAQ,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,SAAS,MAAM,EAAE;QAC7E,MAAM,gBAAgB;YAAC;YAAG;YAAG;SAAE,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,GAAG;QAC9D,MAAM,qBAAqB,KAAK,MAAM,KAAK,OAAO,CAAC,YAAY,mBAAmB;QAElF,mBAAmB;QACnB,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,gBAAgB,eAAe,aAAa,iBAAiB;QAExF,2BAA2B;QAC3B,MAAM,SAAS,AAAC,cAAc,WAAW,cAAgB,sBAAsB,WAAW;QAE1F,uBAAuB;QACvB,MAAM,SAAsB;YAC1B,QAAQ,SAAS,OAAO;YACxB;YACA;YACA;YACA;YACA;YACA;QACF;QAEA,oBAAoB;QACpB,aACE,CAAC,gBAAgB,EAAE,gBAAgB,OAAO,EAAE,gBAAgB,qBAAqB,kBAAkB,IAAI;QAGzG,4BAA4B;QAC5B,eAAe,CAAC,OAAS,CAAC;gBACxB,GAAG,IAAI;gBACP,mBAAmB,KAAK,iBAAiB,IAAI;gBAC7C,qBAAqB,KAAK,mBAAmB,IAAI;YACnD,CAAC;QAED,iBAAiB;QACjB,kBAAkB;IACpB;IAEA,yBAAyB;IACzB,MAAM,sBAAsB;QAC1B,mBAAmB;QACnB,IAAI,UAAU,OAAO,IAAI,QAAQ;YAC/B,UAAU,OAAO,CAAC,IAAI,CAAC,cAAc;gBAAE;YAAO;QAChD;QACA,aAAa,CAAC,SAAS,EAAE,YAAY,aAAa,CAAC,YAAY,CAAC;IAClE;IAEA,aAAa;IACb,MAAM,YAAY;QAChB,oBAAoB;QACpB,IAAI,UAAU,OAAO,IAAI,QAAQ;YAC/B,UAAU,OAAO,CAAC,IAAI,CAAC,cAAc;gBAAE;YAAO;QAChD;IACF;IAEA,eAAe;IACf,MAAM,cAAc;QAClB,eAAe;YACb,OAAO;YACP,cAAc;YACd,gBAAgB;YAChB,YAAY;YACZ,cAAc;YACd,mBAAmB;YACnB,qBAAqB;YACrB,qBAAqB,EAAE;YACvB,WAAW;gBAAC;aAA0C;YACtD,eAAe;QACjB;QACA,eAAe;QACf,gBAAgB;QAChB,eAAe;QACf,oBAAoB;IACtB;IAEA,oBAAoB;IACpB,MAAM,kBAAkB;QACtB,IAAI,UAAU,OAAO,EAAE;YACrB,UAAU,OAAO,CAAC,IAAI,CAAC;YACvB,aAAa;QACf;IACF;IAEA,oBAAoB;IACpB,MAAM,aAAa;QACjB,IAAI,UAAU,OAAO,EAAE;YACrB,UAAU,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,MAAM,CAAC,GAAG,IAAI;YACrF,aAAa;QACf;IACF;IAEA,qBAAqB;IACrB,MAAM,WAAW,CAAC;QAChB,IAAI,UAAU,OAAO,EAAE;YACrB,UAAU,OAAO,CAAC,IAAI,CAAC,aAAa;YACpC,aAAa,CAAC,eAAe,EAAE,OAAO,GAAG,CAAC;QAC5C;IACF;IAEA,wBAAwB;IACxB,MAAM,sBAAsB;QAC1B,mBAAmB,CAAC;IACtB;IAEA,mDAAmD;IACnD,MAAM,iBAAiB,CAAC;QACtB,IAAI,CAAC,UAAU,OAAO;QACtB,OAAO,SAAS,SAAS,CAAC,GAAG,KAAK,QAAQ,SAAS,SAAS,CAAC,SAAS,MAAM,GAAG;IACjF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;wBAAI,WAAU;;;;;;kCAEf,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,SAAQ;4BAAc,WAAU;;8CACnC,8OAAC;oCAAK,GAAE;oCAAgC,MAAK;oCAAO,QAAO;oCAAoB,aAAY;;;;;;8CAC3F,8OAAC;oCAAK,GAAE;oCAAgC,MAAK;oCAAO,QAAO;oCAAoB,aAAY;;;;;;8CAC3F,8OAAC;oCAAO,IAAG;oCAAK,IAAG;oCAAK,GAAE;oCAAK,MAAK;oCAAO,QAAO;oCAAoB,aAAY;;;;;;8CAClF,8OAAC;oCAAO,IAAG;oCAAK,IAAG;oCAAK,GAAE;oCAAK,MAAK;oCAAO,QAAO;oCAAoB,aAAY;;;;;;8CAClF,8OAAC;oCAAO,IAAG;oCAAK,IAAG;oCAAK,GAAE;oCAAK,MAAK;oCAAO,QAAO;oCAAoB,aAAY;;;;;;;;;;;;;;;;;;;;;;;0BAKxF,8OAAC;gBAAO,WAAU;;kCAChB,8OAAC,4JAAA,CAAA,UAAI;wBAAC,MAAK;wBAAQ,WAAU;;0CAC3B,8OAAC,gNAAA,CAAA,YAAS;gCAAC,WAAU;;;;;;0CACrB,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;kCAG5B,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,kIAAA,CAAA,SAAM;gCACL,SAAQ;gCACR,MAAK;gCACL,WAAU;gCACV,SAAS,IAAM,wBAAwB;;kDAEvC,8OAAC,kMAAA,CAAA,OAAI;wCAAC,WAAU;;;;;;kDAChB,8OAAC;kDAAK;;;;;;;;;;;;0CAGR,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAW,CAAC,qBAAqB,EAAE,cAAc,iBAAiB,cAAc;;;;;;kDACrF,8OAAC;wCAAK,WAAU;kDAAuB,cAAc,cAAc;;;;;;;;;;;;0CAGrE,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;;;;;;kDACf,8OAAC;wCAAK,WAAU;;4CAAsB;4CAC5B,YAAY,aAAa;4CAAC;4CAAU,YAAY,KAAK;;;;;;;;;;;;;0CAIjE,8OAAC,kIAAA,CAAA,SAAM;gCACL,SAAQ;gCACR,MAAK;gCACL,WAAU;gCACV,SAAS;;oCAER,kBAAkB,cAAc;kDACjC,8OAAC,oMAAA,CAAA,QAAK;wCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;0BAKvB,8OAAC;gBAAK,WAAU;;kCAEd,8OAAC,kIAAA,CAAA,SAAM;wBAAC,MAAM;wBAAsB,cAAc;kCAChD,cAAA,8OAAC,kIAAA,CAAA,gBAAa;4BAAC,WAAU;;8CACvB,8OAAC,kIAAA,CAAA,eAAY;;sDACX,8OAAC,kIAAA,CAAA,cAAW;4CAAC,WAAU;sDAAsB;;;;;;sDAC7C,8OAAC,kIAAA,CAAA,oBAAiB;sDAAC;;;;;;;;;;;;8CAGrB,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAI,WAAU;;0DACb,8OAAC,iIAAA,CAAA,QAAK;gDAAC,SAAQ;gDAAK,WAAU;0DAAa;;;;;;0DAG3C,8OAAC,iIAAA,CAAA,QAAK;gDACJ,IAAG;gDACH,aAAY;gDACZ,WAAU;gDACV,OAAO;gDACP,UAAU,CAAC,IAAM,kBAAkB,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;;;;;;8CAKvD,8OAAC,kIAAA,CAAA,eAAY;oCAAC,WAAU;;sDACtB,8OAAC,kIAAA,CAAA,SAAM;4CACL,SAAQ;4CACR,WAAU;4CACV,SAAS;gDACP,kBAAkB;gDAClB,wBAAwB;4CAC1B;sDACD;;;;;;sDAGD,8OAAC,kIAAA,CAAA,SAAM;4CACL,WAAU;4CACV,SAAS,IAAM,wBAAwB;sDACxC;;;;;;;;;;;;;;;;;;;;;;;kCAQP,8OAAC,kIAAA,CAAA,SAAM;wBAAC,MAAM;wBAAgB,cAAc;kCAC1C,cAAA,8OAAC,kIAAA,CAAA,gBAAa;4BAAC,WAAU;;8CACvB,8OAAC,kIAAA,CAAA,eAAY;;sDACX,8OAAC,kIAAA,CAAA,cAAW;4CAAC,WAAU;sDAAsB;;;;;;sDAC7C,8OAAC,kIAAA,CAAA,oBAAiB;sDAAC;;;;;;;;;;;;8CAGrB,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAI,WAAU;;0DACb,8OAAC,iIAAA,CAAA,QAAK;gDAAC,SAAQ;gDAAW,WAAU;0DAAa;;;;;;0DAGjD,8OAAC,iIAAA,CAAA,QAAK;gDACJ,IAAG;gDACH,aAAY;gDACZ,WAAU;gDACV,OAAO;gDACP,UAAU,CAAC,IAAM,iBAAiB,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;;;;;;8CAKtD,8OAAC,kIAAA,CAAA,eAAY;oCAAC,WAAU;;sDACtB,8OAAC,kIAAA,CAAA,SAAM;4CACL,SAAQ;4CACR,WAAU;4CACV,SAAS;gDACP;gDACA,kBAAkB;4CACpB;sDACD;;;;;;sDAGD,8OAAC,kIAAA,CAAA,SAAM;4CACL,WAAU;4CACV,SAAS;gDACP,SAAS;gDACT,kBAAkB;4CACpB;4CACA,UAAU,CAAC;sDACZ;;;;;;;;;;;;;;;;;;;;;;;oBAQN,CAAC,eAAe,CAAC,wBAChB,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAG,WAAU;8CAA2B;;;;;;8CACzC,8OAAC;oCAAE,WAAU;8CAAqB;;;;;;8CAElC,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC,kIAAA,CAAA,SAAM;wCACL,WAAU;wCACV,SAAS,IAAM,wBAAwB;;0DAEvC,8OAAC,kMAAA,CAAA,OAAI;gDAAC,WAAU;;;;;;4CAAiB;;;;;;;;;;;;;;;;;;;;;;;oBAS1C,eAAe,CAAC,wBACf,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAG,WAAU;8CAA2B;;;;;;8CACzC,8OAAC;oCAAE,WAAU;;wCAAqB;wCAAwB,kBAAkB;;;;;;;8CAE5E,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,kIAAA,CAAA,SAAM;4CACL,WAAU;4CACV,SAAS,IAAM,kBAAkB;sDAClC;;;;;;sDAGD,8OAAC,kIAAA,CAAA,SAAM;4CACL,SAAQ;4CACR,WAAU;4CACV,SAAS;sDACV;;;;;;;;;;;;;;;;;;;;;;;oBASR,wBAAwB,wBACvB,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAG,WAAU;8CAA2B;;;;;;8CACzC,8OAAC;oCAAE,WAAU;;wCAAqB;wCAAsB;;;;;;;8CACxD,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAI,WAAU;;;;;;;;;;;8CAEjB,8OAAC;oCAAE,WAAU;;wCAA6B;sDACD,8OAAC;4CAAK,WAAU;sDAA6B;;;;;;;;;;;;8CAEtF,8OAAC,kIAAA,CAAA,SAAM;oCACL,SAAQ;oCACR,WAAU;oCACV,SAAS;8CACV;;;;;;;;;;;;;;;;;oBAQN,iCACC,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;;0DACb,8OAAC,oMAAA,CAAA,QAAK;gDAAC,WAAU;;;;;;0DACjB,8OAAC;gDAAK,WAAU;0DAAc;;;;;;0DAC9B,8OAAC,iIAAA,CAAA,QAAK;gDAAC,SAAQ;gDAAU,WAAU;;oDAChC;oDAAe;;;;;;;;;;;;;kDAIpB,8OAAC;wCAAI,WAAU;kDACb,cAAA,8OAAC;4CAAK,WAAU;;gDAAc;gDAAa;gDAAe;;;;;;;;;;;;;;;;;;0CAI9D,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAG,WAAU;;kEACZ,8OAAC,6HAAA,CAAA,UAAK;wDACJ,KAAI;wDACJ,KAAI;wDACJ,OAAO;wDACP,QAAQ;wDACR,WAAU;;;;;;oDAEX,eAAe;;;;;;;0DAElB,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAI,WAAU;;0EACb,8OAAC;gEAAK,WAAU;0EAA6B;;;;;;0EAC7C,8OAAC;gEAAK,WAAU;0EAAyB;;;;;;;;;;;;kEAE3C,8OAAC;wDAAI,WAAU;;0EACb,8OAAC;gEAAK,WAAU;0EAA6B;;;;;;0EAC7C,8OAAC;gEAAK,WAAU;;oEAAW,KAAK,KAAK,CAAC,iBAAiB;oEAAK;;;;;;;;;;;;;;;;;;;;;;;;;kDAKlE,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAG,WAAU;;kEACZ,8OAAC,6HAAA,CAAA,UAAK;wDACJ,KAAI;wDACJ,KAAI;wDACJ,OAAO;wDACP,QAAQ;wDACR,WAAU;;;;;;oDAEX,eAAe,qBAAqB;;;;;;;0DAEvC,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAI,WAAU;;0EACb,8OAAC;gEAAK,WAAU;0EAA6B;;;;;;0EAC7C,8OAAC;gEAAK,WAAU;0EAAyB;;;;;;;;;;;;kEAE3C,8OAAC;wDAAI,WAAU;;0EACb,8OAAC;gEAAK,WAAU;0EAA6B;;;;;;0EAC7C,8OAAC;gEAAK,WAAU;;oEAAW,KAAK,KAAK,CAAC,iBAAiB;oEAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4BAMnE,CAAC,kCACA,8OAAC,uIAAA,CAAA,gBAAa;gCAAC,WAAW,IAAM,qBAAqB;;;;;qDAErD,8OAAC;gCAAI,WAAU;;kDACb,8OAAC,kIAAA,CAAA,SAAM;wCAAC,WAAU;;4CAA2F;4CACnG,eAAe;;;;;;;kDAEzB,8OAAC,kIAAA,CAAA,SAAM;wCAAC,WAAU;;4CAAqF;4CAC7F,eAAe,qBAAqB;;;;;;;;;;;;;;;;;;;kCAOtD,8OAAC;wBAAI,WAAU;;0CAEb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAG,WAAU;0DAAqB;;;;;;0DACnC,8OAAC;gDAAI,WAAU;0DAAwB;;;;;;;;;;;;kDAIzC,8OAAC;wCAAI,WAAU;kDACZ;+CAAI,MAAM;yCAAG,CAAC,GAAG,CAAC,CAAC,GAAG,kBACrB,8OAAC,oMAAA,CAAA,QAAK;gDAEJ,WAAW,CAAC,QAAQ,EAAE,IAAK,IAAI,YAAY,UAAU,GAAI,8BAA8B,gBAAgB,KAAK,CAAC;+CADxG;;;;;;;;;;kDAMX,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAI,WAAU;0DACb,cAAA,8OAAC,6HAAA,CAAA,UAAK;oDACJ,KAAI;oDACJ,KAAI;oDACJ,OAAO;oDACP,QAAQ;oDACR,WAAU;;;;;;;;;;;0DAGd,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAE,WAAU;kEAAe,eAAe;;;;;;kEAC3C,8OAAC;wDAAE,WAAU;kEAA0B;;;;;;;;;;;;;;;;;;kDAI3C,8OAAC;wCAAI,WAAU;kDACb,cAAA,8OAAC;;8DACC,8OAAC;oDAAI,WAAU;;sEACb,8OAAC;sEAAK;;;;;;sEACN,8OAAC;;gEAAM,YAAY,YAAY;gEAAC;;;;;;;;;;;;;8DAElC,8OAAC,oIAAA,CAAA,WAAQ;oDACP,OAAO,YAAY,YAAY;oDAC/B,WAAU;oDACV,oBAAmB;;;;;;;;;;;;;;;;;kDAMzB,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAG,WAAU;0DAA2B;;;;;;0DACzC,8OAAC;gDAAI,WAAU;;oDACZ,YAAY,iBAAiB,kBAC5B,8OAAC;wDAAI,WAAU;;0EACb,8OAAC,sMAAA,CAAA,SAAM;gEAAC,WAAU;;;;;;0EAClB,8OAAC;0EAAK;;;;;;;;;;;;oDAGT,CAAC,YAAY,iBAAiB,kBAAI,8OAAC;wDAAI,WAAU;kEAAwB;;;;;;;;;;;;;;;;;;kDAK9E,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAI,WAAU;kEAAwB;;;;;;kEACvC,8OAAC;wDAAI,WAAU;kEAA6D;;;;;;;;;;;;0DAG9E,8OAAC;gDAAI,WAAU;0DACZ,YAAY,SAAS,CAAC,GAAG,CAAC,CAAC,KAAK,sBAC/B,8OAAC;wDAEC,WAAW,GACT,IAAI,QAAQ,CAAC,eAAe,IAAI,QAAQ,CAAC,aACrC,oBACA,IAAI,QAAQ,CAAC,cACX,iBACA,iBACN;kEAED;uDATI;;;;;;;;;;;;;;;;;;;;;;0CAiBf,8OAAC;gCAAI,WAAU;;kDAEb,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAI,WAAU;;;;;;0DAGf,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAI,WAAU;;0EACb,8OAAC;gEAAI,WAAU;0EACb,cAAA,8OAAC,6HAAA,CAAA,UAAK;oEACJ,KAAI;oEACJ,KAAI;oEACJ,OAAO;oEACP,QAAQ;oEACR,WAAU;;;;;;;;;;;0EAGd,8OAAC,oIAAA,CAAA,WAAQ;gEACP,OAAO,YAAY,YAAY;gEAC/B,WAAU;gEACV,oBAAmB;;;;;;;;;;;;kEAIvB,8OAAC;wDAAI,WAAU;;0EACb,8OAAC,oIAAA,CAAA,WAAQ;gEACP,OAAO,YAAY,cAAc;gEACjC,WAAU;gEACV,oBAAmB;;;;;;0EAErB,8OAAC;gEAAI,WAAU;0EACb,cAAA,8OAAC,6HAAA,CAAA,UAAK;oEACJ,KAAI;oEACJ,KAAI;oEACJ,OAAO;oEACP,QAAQ;oEACR,WAAU;;;;;;;;;;;;;;;;;;;;;;;0DAOlB,8OAAC;gDAAI,WAAU;0DACb,cAAA,8OAAC;oDAAI,WAAU;;sEACb,8OAAC;4DAAI,WAAU;;;;;;sEACf,8OAAC;4DAAK,WAAU;sEAAW;;;;;;;;;;;;;;;;;;;;;;;kDAMjC,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAG,WAAU;0DAA2B;;;;;;4CAExC,uCACC,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAI,WAAU;kEACb,cAAA,8OAAC;4DAAI,WAAU;;;;;;;;;;;kEAEjB,8OAAC;wDAAE,WAAU;kEAAwB;;;;;;;;;;;qEAGvC,8OAAC;gDAAI,WAAU;;kEACb,8OAAC,oIAAA,CAAA,aAAU;wDACT,SAAQ;wDACR,MAAK;wDACL,aAAY;wDACZ,oBAAM,8OAAC,oMAAA,CAAA,QAAK;4DAAC,WAAU;;;;;;wDACvB,OAAM;wDACN,QAAQ,CAAC,OAAO,aAAe,UAAU,WAAW,OAAO;wDAC3D,eAAe,CAAC,YAAY,iBAAiB;;;;;;kEAG/C,8OAAC,oIAAA,CAAA,aAAU;wDACT,SAAQ;wDACR,MAAK;wDACL,aAAY;wDACZ,oBAAM,8OAAC,4MAAA,CAAA,YAAS;4DAAC,WAAU;;;;;;wDAC3B,OAAM;wDACN,QAAQ,CAAC,OAAO,aAAe,UAAU,WAAW,OAAO;wDAC3D,eAAe,CAAC,YAAY,iBAAiB;;;;;;kEAG/C,8OAAC,oIAAA,CAAA,aAAU;wDACT,SAAQ;wDACR,MAAK;wDACL,aAAY;wDACZ,oBAAM,8OAAC,kMAAA,CAAA,OAAI;4DAAC,WAAU;;;;;;wDACtB,OAAM;wDACN,QAAQ,CAAC,OAAO,aAAe,UAAU,UAAU,OAAO;wDAC1D,eAAe,CAAC,YAAY,iBAAiB;;;;;;;;;;;;;;;;;;;;;;;;0CAQvD,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAG,WAAU;0DAAqB;;;;;;0DACnC,8OAAC;gDAAI,WAAU;0DAAwB;;;;;;;;;;;;kDAIzC,8OAAC;wCAAI,WAAU;kDACZ;+CAAI,MAAM;yCAAG,CAAC,GAAG,CAAC,CAAC,GAAG,kBACrB,8OAAC,oMAAA,CAAA,QAAK;gDAEJ,WAAW,CAAC,QAAQ,EAAE,IAAK,IAAI,YAAY,YAAY,GAAI,8BAA8B,gBAAgB,KAAK,CAAC;+CAD1G;;;;;;;;;;kDAMX,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAI,WAAU;0DACb,cAAA,8OAAC,6HAAA,CAAA,UAAK;oDACJ,KAAI;oDACJ,KAAI;oDACJ,OAAO;oDACP,QAAQ;oDACR,WAAU;;;;;;;;;;;0DAGd,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAE,WAAU;kEAAe,eAAe,qBAAqB;;;;;;kEAChE,8OAAC;wDAAE,WAAU;kEAAuB;;;;;;;;;;;;;;;;;;kDAIxC,8OAAC;wCAAI,WAAU;kDACb,cAAA,8OAAC;;8DACC,8OAAC;oDAAI,WAAU;;sEACb,8OAAC;sEAAK;;;;;;sEACN,8OAAC;;gEAAM,YAAY,cAAc;gEAAC;;;;;;;;;;;;;8DAEpC,8OAAC,oIAAA,CAAA,WAAQ;oDACP,OAAO,YAAY,cAAc;oDACjC,WAAU;oDACV,oBAAmB;;;;;;;;;;;;;;;;;kDAMzB,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAG,WAAU;0DAA2B;;;;;;0DACzC,8OAAC;gDAAI,WAAU;;oDACZ,YAAY,mBAAmB,kBAC9B,8OAAC;wDAAI,WAAU;;0EACb,8OAAC,sMAAA,CAAA,SAAM;gEAAC,WAAU;;;;;;0EAClB,8OAAC;0EAAK;;;;;;;;;;;;oDAGT,CAAC,YAAY,mBAAmB,kBAAI,8OAAC;wDAAI,WAAU;kEAAwB;;;;;;;;;;;;;;;;;;kDAKhF,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAG,WAAU;0DAA2B;;;;;;0DACzC,8OAAC;gDAAG,WAAU;;kEACZ,8OAAC;kEAAG;;;;;;kEACJ,8OAAC;kEAAG;;;;;;kEACJ,8OAAC;kEAAG;;;;;;kEACJ,8OAAC;kEAAG;;;;;;kEACJ,8OAAC;kEAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAQd,8OAAC,kIAAA,CAAA,SAAM;gBAAC,MAAM;gBAAiB,cAAc;0BAC3C,cAAA,8OAAC,kIAAA,CAAA,gBAAa;oBAAC,WAAU;;sCACvB,8OAAC,kIAAA,CAAA,eAAY;;8CACX,8OAAC,kIAAA,CAAA,cAAW;oCAAC,WAAU;;wCAAkC;wCAC/C,YAAY,aAAa,GAAG;wCAAE;;;;;;;8CAExC,8OAAC,kIAAA,CAAA,oBAAiB;oCAAC,WAAU;8CAC1B,gBAAgB,yBACf,8OAAC;wCAAK,WAAU;kDAAkB;;;;;+CAChC,gBAAgB,2BAClB,8OAAC;wCAAK,WAAU;kDAAe;;;;;6DAE/B,8OAAC;wCAAK,WAAU;kDAAkB;;;;;;;;;;;;;;;;;sCAKxC,8OAAC;4BAAI,WAAU;sCACZ,gBAAgB,yBACf,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC,sMAAA,CAAA,SAAM;oCAAC,WAAU;;;;;;;;;;uCAElB,gBAAgB,2BAClB,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC,sMAAA,CAAA,SAAM;oCAAC,WAAU;;;;;;;;;;qDAGpB,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC,sMAAA,CAAA,SAAM;oCAAC,WAAU;;;;;;;;;;;;;;;;sCAKxB,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAI,WAAU;sDACZ;mDAAI,MAAM;6CAAG,CAAC,GAAG,CAAC,CAAC,GAAG,kBACrB,8OAAC,oMAAA,CAAA,QAAK;oDAEJ,WAAW,CAAC,QAAQ,EAAE,IAAK,IAAI,YAAY,UAAU,GAAI,8BAA8B,gBAAgB,KAAK,CAAC;mDADxG;;;;;;;;;;sDAKX,8OAAC;sDAAM,eAAe;;;;;;;;;;;;8CAExB,8OAAC;oCAAI,WAAU;8CAAgB;;;;;;8CAC/B,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;sDAAM,eAAe,qBAAqB;;;;;;sDAC3C,8OAAC;4CAAI,WAAU;sDACZ;mDAAI,MAAM;6CAAG,CAAC,GAAG,CAAC,CAAC,GAAG,kBACrB,8OAAC,oMAAA,CAAA,QAAK;oDAEJ,WAAW,CAAC,QAAQ,EAAE,IAAK,IAAI,YAAY,YAAY,GAAI,8BAA8B,gBAAgB,KAAK,CAAC;mDAD1G;;;;;;;;;;;;;;;;;;;;;;sCAQf,8OAAC,kIAAA,CAAA,eAAY;sCACX,cAAA,8OAAC,kIAAA,CAAA,SAAM;gCACL,WAAU;gCACV,SAAS;;oCACV;oCACqB,YAAY,aAAa;;;;;;;;;;;;;;;;;;;;;;;0BAOrD,8OAAC,kIAAA,CAAA,SAAM;gBAAC,MAAM;gBAAkB,cAAc;0BAC5C,cAAA,8OAAC,kIAAA,CAAA,gBAAa;oBAAC,WAAU;;sCACvB,8OAAC,kIAAA,CAAA,eAAY;;8CACX,8OAAC,kIAAA,CAAA,cAAW;oCAAC,WAAU;8CAAkC;;;;;;8CACzD,8OAAC,kIAAA,CAAA,oBAAiB;oCAAC,WAAU;8CAC1B,iBAAiB,yBAChB,8OAAC;wCAAK,WAAU;kDAAkB;;;;;6DAElC,8OAAC;wCAAK,WAAU;kDAAe;;;;;;;;;;;;;;;;;sCAKrC,8OAAC;4BAAI,WAAU;sCACZ,iBAAiB,yBAChB,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC,sMAAA,CAAA,SAAM;oCAAC,WAAU;;;;;;;;;;qDAGpB,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC,sMAAA,CAAA,SAAM;oCAAC,WAAU;;;;;;;;;;;;;;;;sCAKxB,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAE,WAAU;8CACV,iBAAiB,WAAW,6BAA6B;;;;;;8CAE5D,8OAAC;oCAAE,WAAU;8CACV,iBAAiB,WACd,yDACA;;;;;;;;;;;;sCAIR,8OAAC,kIAAA,CAAA,eAAY;4BAAC,WAAU;;8CACtB,8OAAC,kIAAA,CAAA,SAAM;oCACL,SAAQ;oCACR,WAAU;oCACV,SAAS;8CACV;;;;;;8CAGD,8OAAC,kIAAA,CAAA,SAAM;oCACL,WAAU;oCACV,SAAS;8CACV;;;;;;;;;;;;;;;;;;;;;;;0BAOP,8OAAC;gBACC,yBAAyB;oBACvB,QAAQ,CAAC;;;;;;;;;;;;;;;QAeX,CAAC;gBACD;;;;;;;;;;;;AAIR","debugId":null}}]
=======
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/wizardshit/Wizard-s-Gambit/client/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/wizardshit/Wizard-s-Gambit/client/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Progress({\n  className,\n  value,\n  ...props\n}: React.ComponentProps<typeof ProgressPrimitive.Root>) {\n  return (\n    <ProgressPrimitive.Root\n      data-slot=\"progress\"\n      className={cn(\n        \"bg-primary/20 relative h-2 w-full overflow-hidden rounded-full\",\n        className\n      )}\n      {...props}\n    >\n      <ProgressPrimitive.Indicator\n        data-slot=\"progress-indicator\"\n        className=\"bg-primary h-full w-full flex-1 transition-all\"\n        style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n      />\n    </ProgressPrimitive.Root>\n  )\n}\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,SAAS,EAChB,SAAS,EACT,KAAK,EACL,GAAG,OACiD;IACpD,qBACE,8OAAC,oKAAA,CAAA,OAAsB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,oKAAA,CAAA,YAA2B;YAC1B,aAAU;YACV,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIlE","debugId":null}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/wizardshit/Wizard-s-Gambit/client/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/70\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 237, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/wizardshit/Wizard-s-Gambit/client/src/components/connect-wallet.tsx"],"sourcesContent":["\"use client\"\n\nimport { Button } from \"@/components/ui/button\"\nimport { Wallet } from \"lucide-react\"\n\ninterface ConnectWalletProps {\n  onConnect: () => void\n}\n\nexport function ConnectWallet({ onConnect }: ConnectWalletProps) {\n  return (\n    <div className=\"bg-gray-900/30 border border-gray-800 rounded-lg p-4\">\n      <div className=\"flex flex-col items-center justify-center py-4\">\n        <Wallet className=\"h-10 w-10 text-purple-400 mb-3\" />\n        <h3 className=\"font-medium text-lg mb-1\">Connect Wallet</h3>\n        <p className=\"text-sm text-gray-400 text-center mb-4\">Connect your wallet to place bets and earn rewards</p>\n        <Button\n          className=\"bg-gradient-to-r from-purple-600 to-indigo-600 hover:from-purple-700 hover:to-indigo-700\"\n          onClick={onConnect}\n        >\n          Connect Wallet\n        </Button>\n      </div>\n    </div>\n  )\n}\n\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AASO,SAAS,cAAc,EAAE,SAAS,EAAsB;IAC7D,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC,sMAAA,CAAA,SAAM;oBAAC,WAAU;;;;;;8BAClB,8OAAC;oBAAG,WAAU;8BAA2B;;;;;;8BACzC,8OAAC;oBAAE,WAAU;8BAAyC;;;;;;8BACtD,8OAAC,kIAAA,CAAA,SAAM;oBACL,WAAU;oBACV,SAAS;8BACV;;;;;;;;;;;;;;;;;AAMT","debugId":null}},
    {"offset": {"line": 303, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/wizardshit/Wizard-s-Gambit/client/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { XIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Dialog({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Root>) {\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />\n}\n\nfunction DialogTrigger({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Trigger>) {\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />\n}\n\nfunction DialogPortal({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Portal>) {\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />\n}\n\nfunction DialogClose({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Close>) {\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />\n}\n\nfunction DialogOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {\n  return (\n    <DialogPrimitive.Overlay\n      data-slot=\"dialog-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogContent({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Content>) {\n  return (\n    <DialogPortal data-slot=\"dialog-portal\">\n      <DialogOverlay />\n      <DialogPrimitive.Content\n        data-slot=\"dialog-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n        <DialogPrimitive.Close className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\">\n          <XIcon />\n          <span className=\"sr-only\">Close</span>\n        </DialogPrimitive.Close>\n      </DialogPrimitive.Content>\n    </DialogPortal>\n  )\n}\n\nfunction DialogHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-header\"\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-footer\"\n      className={cn(\n        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Title>) {\n  return (\n    <DialogPrimitive.Title\n      data-slot=\"dialog-title\"\n      className={cn(\"text-lg leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Description>) {\n  return (\n    <DialogPrimitive.Description\n      data-slot=\"dialog-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,SAAS,OAAO,EACd,GAAG,OAC+C;IAClD,qBAAO,8OAAC,kKAAA,CAAA,OAAoB;QAAC,aAAU;QAAU,GAAG,KAAK;;;;;;AAC3D;AAEA,SAAS,cAAc,EACrB,GAAG,OACkD;IACrD,qBAAO,8OAAC,kKAAA,CAAA,UAAuB;QAAC,aAAU;QAAkB,GAAG,KAAK;;;;;;AACtE;AAEA,SAAS,aAAa,EACpB,GAAG,OACiD;IACpD,qBAAO,8OAAC,kKAAA,CAAA,SAAsB;QAAC,aAAU;QAAiB,GAAG,KAAK;;;;;;AACpE;AAEA,SAAS,YAAY,EACnB,GAAG,OACgD;IACnD,qBAAO,8OAAC,kKAAA,CAAA,QAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,GAAG,OACkD;IACrD,qBACE,8OAAC,kKAAA,CAAA,UAAuB;QACtB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,QAAQ,EACR,GAAG,OACkD;IACrD,qBACE,8OAAC;QAAa,aAAU;;0BACtB,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAuB;gBACtB,aAAU;gBACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+WACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8OAAC,kKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,8OAAC,gMAAA,CAAA,QAAK;;;;;0CACN,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKpC;AAEA,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0DACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,kKAAA,CAAA,QAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACsD;IACzD,qBACE,8OAAC,kKAAA,CAAA,cAA2B;QAC1B,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 476, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/wizardshit/Wizard-s-Gambit/client/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 502, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/wizardshit/Wizard-s-Gambit/client/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 534, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/wizardshit/Wizard-s-Gambit/client/src/components/battle-card.tsx"],"sourcesContent":["\"use client\"\n\nimport type React from \"react\"\n\nimport { useState } from \"react\"\nimport { Shield } from \"lucide-react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Badge } from \"@/components/ui/badge\"\n\ntype SpellLevel = 1 | 2 | 3\ntype Element = \"inferno\" | \"glacius\" | \"ventus\"\n\ninterface BattleCardProps {\n  element: Element\n  name: string\n  description: string\n  icon: React.ReactNode\n  color: string\n  onCast: (level: SpellLevel, useDefense: boolean) => void\n  canUseDefense: boolean\n}\n\nexport function BattleCard({ element, name, description, icon, color, onCast, canUseDefense }: BattleCardProps) {\n  const [selectedLevel, setSelectedLevel] = useState<SpellLevel>(1)\n  const [useDefense, setUseDefense] = useState(false)\n\n  const getColorClasses = (color: string, element: \"bg\" | \"border\" | \"text\" | \"hover\") => {\n    const colorMap: Record<string, Record<string, string>> = {\n      red: {\n        bg: \"bg-red-900/30\",\n        border: \"border-red-500/30\",\n        text: \"text-red-400\",\n        hover: \"hover:bg-red-900/50 hover:border-red-500/50\",\n      },\n      blue: {\n        bg: \"bg-blue-900/30\",\n        border: \"border-blue-500/30\",\n        text: \"text-blue-400\",\n        hover: \"hover:bg-blue-900/50 hover:border-blue-500/50\",\n      },\n      green: {\n        bg: \"bg-green-900/30\",\n        border: \"border-green-500/30\",\n        text: \"text-green-400\",\n        hover: \"hover:bg-green-900/50 hover:border-green-500/50\",\n      },\n      purple: {\n        bg: \"bg-purple-900/30\",\n        border: \"border-purple-500/30\",\n        text: \"text-purple-400\",\n        hover: \"hover:bg-purple-900/50 hover:border-purple-500/50\",\n      },\n    }\n\n    return colorMap[color]?.[element] || colorMap.purple[element]\n  }\n\n  const handleCast = () => {\n    onCast(selectedLevel, useDefense)\n    setSelectedLevel(1)\n    setUseDefense(false)\n  }\n\n  const getLevelDamage = (level: SpellLevel): number => {\n    return level === 1 ? 20 : level === 2 ? 25 : 30\n  }\n\n  return (\n    <div\n      className={`${getColorClasses(color, \"bg\")} border ${getColorClasses(color, \"border\")} rounded-lg p-3 ${getColorClasses(color, \"hover\")} transition-all duration-300`}\n    >\n      <div className=\"flex items-center mb-2\">\n        <div\n          className={`w-8 h-8 rounded-full flex items-center justify-center ${getColorClasses(color, \"bg\")} border ${getColorClasses(color, \"border\")} mr-2`}\n        >\n          {icon}\n        </div>\n        <div>\n          <h3 className=\"font-medium text-sm\">{name}</h3>\n          <p className=\"text-xs text-gray-400\">{description}</p>\n        </div>\n      </div>\n\n      <div className=\"flex justify-between items-center mb-2\">\n        <div className=\"flex gap-1\">\n          {[1, 2, 3].map((level) => (\n            <Button\n              key={level}\n              size=\"sm\"\n              variant=\"outline\"\n              className={`w-7 h-7 p-0 ${selectedLevel === level ? `${getColorClasses(color, \"bg\")} ${getColorClasses(color, \"border\")}` : \"bg-gray-900/50 border-gray-700\"}`}\n              onClick={() => setSelectedLevel(level as SpellLevel)}\n            >\n              {level}\n            </Button>\n          ))}\n        </div>\n        <Badge className=\"bg-gray-800 border-0\">{getLevelDamage(selectedLevel)} DMG</Badge>\n      </div>\n\n      <div className=\"flex items-center justify-between\">\n        <Button\n          size=\"sm\"\n          variant=\"outline\"\n          className={`${useDefense ? \"bg-blue-900/30 border-blue-500/30\" : \"bg-gray-900/50 border-gray-700\"} flex items-center gap-1`}\n          onClick={() => setUseDefense(!useDefense)}\n          disabled={!canUseDefense}\n        >\n          <Shield className=\"h-3 w-3\" />\n          <span className=\"text-xs\">Defense</span>\n        </Button>\n\n        <Button size=\"sm\" className={`bg-${color}-600 hover:bg-${color}-700`} onClick={handleCast}>\n          Cast\n        </Button>\n      </div>\n    </div>\n  )\n}\n\n"],"names":[],"mappings":";;;;AAIA;AACA;AACA;AACA;AAPA;;;;;;AAsBO,SAAS,WAAW,EAAE,OAAO,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,aAAa,EAAmB;IAC5G,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAc;IAC/D,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,MAAM,kBAAkB,CAAC,OAAe;QACtC,MAAM,WAAmD;YACvD,KAAK;gBACH,IAAI;gBACJ,QAAQ;gBACR,MAAM;gBACN,OAAO;YACT;YACA,MAAM;gBACJ,IAAI;gBACJ,QAAQ;gBACR,MAAM;gBACN,OAAO;YACT;YACA,OAAO;gBACL,IAAI;gBACJ,QAAQ;gBACR,MAAM;gBACN,OAAO;YACT;YACA,QAAQ;gBACN,IAAI;gBACJ,QAAQ;gBACR,MAAM;gBACN,OAAO;YACT;QACF;QAEA,OAAO,QAAQ,CAAC,MAAM,EAAE,CAAC,QAAQ,IAAI,SAAS,MAAM,CAAC,QAAQ;IAC/D;IAEA,MAAM,aAAa;QACjB,OAAO,eAAe;QACtB,iBAAiB;QACjB,cAAc;IAChB;IAEA,MAAM,iBAAiB,CAAC;QACtB,OAAO,UAAU,IAAI,KAAK,UAAU,IAAI,KAAK;IAC/C;IAEA,qBACE,8OAAC;QACC,WAAW,GAAG,gBAAgB,OAAO,MAAM,QAAQ,EAAE,gBAAgB,OAAO,UAAU,gBAAgB,EAAE,gBAAgB,OAAO,SAAS,4BAA4B,CAAC;;0BAErK,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBACC,WAAW,CAAC,sDAAsD,EAAE,gBAAgB,OAAO,MAAM,QAAQ,EAAE,gBAAgB,OAAO,UAAU,KAAK,CAAC;kCAEjJ;;;;;;kCAEH,8OAAC;;0CACC,8OAAC;gCAAG,WAAU;0CAAuB;;;;;;0CACrC,8OAAC;gCAAE,WAAU;0CAAyB;;;;;;;;;;;;;;;;;;0BAI1C,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCACZ;4BAAC;4BAAG;4BAAG;yBAAE,CAAC,GAAG,CAAC,CAAC,sBACd,8OAAC,kIAAA,CAAA,SAAM;gCAEL,MAAK;gCACL,SAAQ;gCACR,WAAW,CAAC,YAAY,EAAE,kBAAkB,QAAQ,GAAG,gBAAgB,OAAO,MAAM,CAAC,EAAE,gBAAgB,OAAO,WAAW,GAAG,kCAAkC;gCAC9J,SAAS,IAAM,iBAAiB;0CAE/B;+BANI;;;;;;;;;;kCAUX,8OAAC,iIAAA,CAAA,QAAK;wBAAC,WAAU;;4BAAwB,eAAe;4BAAe;;;;;;;;;;;;;0BAGzE,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,kIAAA,CAAA,SAAM;wBACL,MAAK;wBACL,SAAQ;wBACR,WAAW,GAAG,aAAa,sCAAsC,iCAAiC,wBAAwB,CAAC;wBAC3H,SAAS,IAAM,cAAc,CAAC;wBAC9B,UAAU,CAAC;;0CAEX,8OAAC,sMAAA,CAAA,SAAM;gCAAC,WAAU;;;;;;0CAClB,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;kCAG5B,8OAAC,kIAAA,CAAA,SAAM;wBAAC,MAAK;wBAAK,WAAW,CAAC,GAAG,EAAE,MAAM,cAAc,EAAE,MAAM,IAAI,CAAC;wBAAE,SAAS;kCAAY;;;;;;;;;;;;;;;;;;AAMnG","debugId":null}},
    {"offset": {"line": 734, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/wizardshit/Wizard-s-Gambit/client/src/app/battle/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect, useRef } from \"react\"\nimport Image from \"next/image\"\nimport Link from \"next/link\"\nimport { io, type Socket } from \"socket.io-client\"\nimport { Shield, Flame, Snowflake, Wind, ArrowLeft, Heart, Users, Trophy, Wifi } from \"lucide-react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Progress } from \"@/components/ui/progress\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { ConnectWallet } from \"@/components/connect-wallet\"\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogFooter,\n} from \"@/components/ui/dialog\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { BattleCard } from \"@/components/battle-card\"\n\n// Types for our game state\ntype Element = \"inferno\" | \"glacius\" | \"ventus\"\ntype SpellLevel = 1 | 2 | 3\ntype Player = \"player\" | \"opponent\"\ntype BattleOutcome = \"win\" | \"lose\" | \"draw\"\n\ninterface RoundResult {\n  winner: Player | null\n  playerElement: Element\n  playerLevel: SpellLevel\n  opponentElement: Element\n  opponentLevel: SpellLevel\n  damage: number\n  isVoid: boolean\n}\n\ninterface BattleState {\n  round: number\n  playerHealth: number\n  opponentHealth: number\n  playerWins: number\n  opponentWins: number\n  playerUsedDefense: boolean\n  opponentUsedDefense: boolean\n  currentRoundResults: RoundResult[]\n  battleLog: string[]\n  currentBattle: number\n}\n\ninterface PlayerInfo {\n  socketId: string\n  type: string\n}\n\nexport default function BattlePage() {\n  // WebSocket connection\n  const socketRef = useRef<Socket | null>(null)\n  const [isConnected, setIsConnected] = useState(false)\n  const [roomId, setRoomId] = useState<string | null>(null)\n  const [isWaitingForOpponent, setIsWaitingForOpponent] = useState(false)\n  const [customServerIp, setCustomServerIp] = useState(\"\")\n  const [showConnectionDialog, setShowConnectionDialog] = useState(false)\n  const [showRoomDialog, setShowRoomDialog] = useState(false)\n  const [roomCodeInput, setRoomCodeInput] = useState(\"\")\n  const [mySocketId, setMySocketId] = useState<string | null>(null)\n  const [opponentSocketId, setOpponentSocketId] = useState<string | null>(null)\n  const [playersInRoom, setPlayersInRoom] = useState<string[]>([])\n\n  // Battle state\n  const [battleState, setBattleState] = useState<BattleState>({\n    round: 1,\n    playerHealth: 100,\n    opponentHealth: 100,\n    playerWins: 0,\n    opponentWins: 0,\n    playerUsedDefense: false,\n    opponentUsedDefense: false,\n    currentRoundResults: [],\n    battleLog: [\"• Connect to a server to begin\"],\n    currentBattle: 1,\n  })\n\n  // UI state\n  const [selectedElement, setSelectedElement] = useState<Element | null>(null)\n  const [selectedLevel, setSelectedLevel] = useState<SpellLevel>(1)\n  const [isUsingDefense, setIsUsingDefense] = useState(false)\n  const [showRoundResult, setShowRoundResult] = useState(false)\n  const [showBattleResult, setShowBattleResult] = useState(false)\n  const [roundWinner, setRoundWinner] = useState<Player | null>(null)\n  const [battleWinner, setBattleWinner] = useState<Player | null>(null)\n  const [isSpectatorMode, setIsSpectatorMode] = useState(false)\n  const [spectatorCount, setSpectatorCount] = useState(0)\n  const [totalBetAmount, setTotalBetAmount] = useState(0)\n  const [isWalletConnected, setIsWalletConnected] = useState(false)\n  const [battleEnded, setBattleEnded] = useState(false)\n  const [waitingForOpponentMove, setWaitingForOpponentMove] = useState(false)\n\n  // Initialize WebSocket connection\n  useEffect(() => {\n    const wsServer = customServerIp\n      ? `http://${customServerIp}:3001`\n      : process.env.NEXT_PUBLIC_WS_SERVER || \"http://localhost:3001\"\n\n    // Connect to WebSocket server\n    const socket = io(wsServer, {\n      autoConnect: false,\n      reconnectionAttempts: 3,\n      reconnectionDelay: 1000,\n    })\n\n    socketRef.current = socket\n\n    // Event listeners\n    socket.on(\"connect\", () => {\n      setIsConnected(true)\n      setMySocketId(socket?.id)\n      addBattleLog(\"• Connected to battle server\")\n    })\n\n    socket.on(\"disconnect\", () => {\n      setIsConnected(false)\n      addBattleLog(\"• Disconnected from battle server\")\n    })\n    \n    \n\n    socket.on(\"room_joined\", (data: { roomId: string; isSpectator: boolean }) => {\n      setRoomId(data.roomId)\n      setIsWaitingForOpponent(!data.isSpectator)\n      setIsSpectatorMode(data.isSpectator)\n      addBattleLog(`• Joined room ${data.roomId}`)\n      if (data.isSpectator) {\n        addBattleLog(\"• Entered spectator mode\")\n      } else {\n        addBattleLog(\"• Waiting for opponent...\")\n      }\n    })\n\n    socket.on(\"opponent_joined\", () => {\n      setIsWaitingForOpponent(false)\n      addBattleLog(\"• Opponent has joined the battle!\")\n    })\n\n    socket.on(\"spectator_count\", (count: number) => {\n      setSpectatorCount(count)\n    })\n\n    socket.on(\"bet_update\", (amount: number) => {\n      setTotalBetAmount(amount)\n    })\n\n    socket.on(\"room-players\", (playerList: string[]) => {\n      setPlayersInRoom(playerList)\n\n      // Find opponent socket ID (the one that's not mine)\n      if (playerList.length === 2) {\n        const opponent = playerList.find((id) => id !== socket.id)\n        if (opponent) {\n          setOpponentSocketId(opponent)\n        }\n      }\n    })\n\n    socket.on(\"round_start\", () => {\n      setWaitingForOpponentMove(false)\n      addBattleLog(`• Round ${battleState.round} begins! Choose your spell.`)\n    })\n\n    socket.on(\"round_result\", (result: RoundResult) => {\n      handleRoundResult(result)\n      setWaitingForOpponentMove(false)\n    })\n\n    socket.on(\"battle_result\", (winner: Player) => {\n      setBattleWinner(winner)\n      setBattleEnded(true)\n      setShowBattleResult(true)\n      addBattleLog(winner === \"player\" ? \"• You won the battle!\" : \"• You lost the battle!\")\n    })\n\n    socket.on(\"opponent_left\", () => {\n      addBattleLog(\"• Opponent has left the battle\")\n      setIsWaitingForOpponent(true)\n      setWaitingForOpponentMove(false)\n    })\n\n    socket.on(\"error\", (message: string) => {\n      addBattleLog(`• Error: ${message}`)\n      setWaitingForOpponentMove(false)\n    })\n\n    // Connect to server\n    socket.connect()\n\n    // Cleanup on unmount\n    return () => {\n      socket.disconnect()\n    }\n  }, [customServerIp])\n\n  // Helper function to add messages to battle log\n  const addBattleLog = (message: string) => {\n    setBattleState((prev) => ({\n      ...prev,\n      battleLog: [...prev.battleLog.slice(-7), message],\n    }))\n  }\n\n  // Determine the outcome of an element matchup\n  const getElementOutcome = (playerElement: Element, opponentElement: Element): BattleOutcome => {\n    if (playerElement === opponentElement) return \"draw\"\n\n    const winConditions: Record<Element, Element> = {\n      inferno: \"glacius\",\n      glacius: \"ventus\",\n      ventus: \"inferno\",\n    }\n\n    return winConditions[playerElement] === opponentElement ? \"win\" : \"lose\"\n  }\n\n  // Calculate damage based on element matchup and levels\n  const calculateDamage = (\n    playerElement: Element,\n    playerLevel: SpellLevel,\n    opponentElement: Element,\n    opponentLevel: SpellLevel,\n  ): { winner: Player | null; damage: number } => {\n    const outcome = getElementOutcome(playerElement, opponentElement)\n\n    if (outcome === \"win\") {\n      return { winner: \"player\", damage: getLevelDamage(playerLevel) }\n    } else if (outcome === \"lose\") {\n      return { winner: \"opponent\", damage: getLevelDamage(opponentLevel) }\n    } else {\n      // Same element - higher level wins with damage = difference\n      if (playerLevel > opponentLevel) {\n        return { winner: \"player\", damage: getLevelDamage(playerLevel) - getLevelDamage(opponentLevel) }\n      } else if (opponentLevel > playerLevel) {\n        return { winner: \"opponent\", damage: getLevelDamage(opponentLevel) - getLevelDamage(playerLevel) }\n      } else {\n        // Same level - draw\n        return { winner: null, damage: 0 }\n      }\n    }\n  }\n\n  // Get damage for a specific level\n  const getLevelDamage = (level: SpellLevel): number => {\n    return level === 1 ? 20 : level === 2 ? 25 : 30\n  }\n\n  // Handle round results from server\n  const handleRoundResult = (result: RoundResult) => {\n    setBattleState((prev) => {\n      const newState = { ...prev }\n\n      // Update health based on damage\n      if (!result.isVoid) {\n        if (result.winner === \"player\") {\n          newState.opponentHealth = Math.max(0, newState.opponentHealth - result.damage)\n        } else if (result.winner === \"opponent\") {\n          newState.playerHealth = Math.max(0, newState.playerHealth - result.damage)\n        }\n      }\n\n      // Add to round results\n      newState.currentRoundResults = [...newState.currentRoundResults, result]\n\n      // Update battle log\n      let logMessage = \"\"\n      if (result.isVoid) {\n        logMessage = \"• Defense card negated the round!\"\n      } else if (result.winner === null) {\n        logMessage = \"• Round ended in a draw!\"\n      } else {\n        const winner = result.winner === \"player\" ? \"You\" : \"Opponent\"\n        const loser = result.winner === \"player\" ? \"Opponent\" : \"You\"\n        logMessage = `• ${winner} dealt ${result.damage} damage to ${loser}`\n      }\n      newState.battleLog = [...newState.battleLog, logMessage]\n\n      // Check if round is complete (5 rounds)\n      if (newState.currentRoundResults.length >= 5) {\n        determineRoundWinner(newState)\n      }\n\n      return newState\n    })\n  }\n\n  // Determine the winner of a complete round (5 battles)\n  const determineRoundWinner = (state: BattleState) => {\n    // Count wins\n    const playerWins = state.currentRoundResults.filter((r) => r.winner === \"player\").length\n    const opponentWins = state.currentRoundResults.filter((r) => r.winner === \"opponent\").length\n\n    // Determine round winner\n    let roundWinner: Player | null = null\n    if (playerWins > opponentWins) {\n      roundWinner = \"player\"\n      state.playerWins += 1\n    } else if (opponentWins > playerWins) {\n      roundWinner = \"opponent\"\n      state.opponentWins += 1\n    }\n\n    // Update UI\n    setRoundWinner(roundWinner)\n    setShowRoundResult(true)\n\n    // Add to battle log\n    if (roundWinner === \"player\") {\n      addBattleLog(\"• You won this battle!\")\n    } else if (roundWinner === \"opponent\") {\n      addBattleLog(\"• Opponent won this battle!\")\n    } else {\n      addBattleLog(\"• Battle ended in a tie!\")\n    }\n\n    // Reset for next battle\n    state.round += 1\n    state.playerHealth = 100\n    state.opponentHealth = 100\n    state.playerUsedDefense = false\n    state.opponentUsedDefense = false\n    state.currentRoundResults = []\n    state.currentBattle += 1\n\n    // Check if duel is over\n    if (state.playerWins >= 2 || state.opponentWins >= 2) {\n      setBattleWinner(state.playerWins >= 2 ? \"player\" : \"opponent\")\n      setBattleEnded(true)\n      setShowBattleResult(true)\n    }\n  }\n\n  // Handle casting a spell\n  const castSpell = (element: Element, level: SpellLevel, useDefense = false) => {\n    if (!socketRef.current || !roomId) {\n      // Fallback to local spell casting if not connected\n      if (!isConnected) {\n        simulateLocalRound(element, level, useDefense)\n      }\n      return\n    }\n\n    // Send spell to server\n    socketRef.current.emit(\"cast_spell\", {\n      roomId,\n      element,\n      level,\n      useDefense,\n    })\n\n    // Add to battle log\n    addBattleLog(`• You cast ${element} level ${level}${useDefense ? \" with defense\" : \"\"}`)\n    setWaitingForOpponentMove(true)\n  }\n\n  // Simulate a local round for offline testing\n  const simulateLocalRound = (playerElement: Element, playerLevel: SpellLevel, useDefense: boolean) => {\n    // Generate opponent's move\n    const elements: Element[] = [\"inferno\", \"glacius\", \"ventus\"]\n    const opponentElement = elements[Math.floor(Math.random() * elements.length)]\n    const opponentLevel = [1, 2, 3][Math.floor(Math.random() * 3)] as SpellLevel\n    const opponentUseDefense = Math.random() > 0.8 && !battleState.opponentUsedDefense\n\n    // Calculate result\n    const { winner, damage } = calculateDamage(playerElement, playerLevel, opponentElement, opponentLevel)\n\n    // Check if defense is used\n    const isVoid = (useDefense && winner === \"opponent\") || (opponentUseDefense && winner === \"player\")\n\n    // Create result object\n    const result: RoundResult = {\n      winner: isVoid ? null : winner,\n      playerElement,\n      playerLevel,\n      opponentElement,\n      opponentLevel,\n      damage,\n      isVoid,\n    }\n\n    // Update battle log\n    addBattleLog(\n      `• Opponent cast ${opponentElement} level ${opponentLevel}${opponentUseDefense ? \" with defense\" : \"\"}`,\n    )\n\n    // Update defense used flags\n    setBattleState((prev) => ({\n      ...prev,\n      playerUsedDefense: prev.playerUsedDefense || useDefense,\n      opponentUsedDefense: prev.opponentUsedDefense || opponentUseDefense,\n    }))\n\n    // Process result\n    handleRoundResult(result)\n  }\n\n  // Continue to next round\n  const continueToNextRound = () => {\n    setShowRoundResult(false)\n    if (socketRef.current && roomId) {\n      socketRef.current.emit(\"next_round\", { roomId })\n    }\n    addBattleLog(`• Battle ${battleState.currentBattle} starting...`)\n  }\n\n  // End battle\n  const endBattle = () => {\n    setShowBattleResult(false)\n    if (socketRef.current && roomId) {\n      socketRef.current.emit(\"leave_room\", { roomId })\n    }\n  }\n\n  // Reset battle\n  const resetBattle = () => {\n    setBattleState({\n      round: 1,\n      playerHealth: 100,\n      opponentHealth: 100,\n      playerWins: 0,\n      opponentWins: 0,\n      playerUsedDefense: false,\n      opponentUsedDefense: false,\n      currentRoundResults: [],\n      battleLog: [\"• Battle begins! Prepare your spells...\"],\n      currentBattle: 1,\n    })\n    setBattleEnded(false)\n    setBattleWinner(null)\n    setRoundWinner(null)\n    setShowBattleResult(false)\n  }\n\n  // Quick join battle\n  const quickJoinBattle = () => {\n    if (socketRef.current) {\n      socketRef.current.emit(\"quick_join\")\n      addBattleLog(\"• Searching for opponent...\")\n    }\n  }\n\n  // Create a new room\n  const createRoom = () => {\n    if (socketRef.current) {\n      socketRef.current.emit(\"join_room\", `room_${Math.random().toString(36).substr(2, 6)}`)\n      addBattleLog(\"• Creating new battle room...\")\n    }\n  }\n\n  // Join specific room\n  const joinRoom = (roomId: string) => {\n    if (socketRef.current) {\n      socketRef.current.emit(\"join_room\", roomId)\n      addBattleLog(`• Joining room ${roomId}...`)\n    }\n  }\n\n  // Toggle spectator mode\n  const toggleSpectatorMode = () => {\n    setIsSpectatorMode(!isSpectatorMode)\n  }\n\n  // Format socket ID for display (shortened version)\n  const formatSocketId = (socketId: string | null) => {\n    if (!socketId) return \"Unknown\"\n    return socketId.substring(0, 6) + \"...\" + socketId.substring(socketId.length - 4)\n  }\n\n  return (\n    <div className=\"min-h-screen bg-[#0a0a1a] text-gray-100 relative overflow-hidden pt-16\">\n      {/* Magical sigils on the ground */}\n      <div className=\"absolute inset-0 z-0\">\n        <div className=\"absolute top-1/4 left-1/4 w-64 h-64 border border-purple-900/20 rounded-full\"></div>\n        <div className=\"absolute top-1/4 left-1/4 w-96 h-96 border border-purple-900/10 rounded-full\"></div>\n        <div className=\"absolute top-1/4 left-1/4 w-128 h-128 border border-purple-900/5 rounded-full\"></div>\n\n        <div className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-full h-full max-w-4xl max-h-4xl\">\n          <svg viewBox=\"0 0 100 100\" className=\"w-full h-full opacity-5\">\n            <path d=\"M50 0 L100 50 L50 100 L0 50 Z\" fill=\"none\" stroke=\"rgb(139, 92, 246)\" strokeWidth=\"0.2\" />\n            <path d=\"M50 10 L90 50 L50 90 L10 50 Z\" fill=\"none\" stroke=\"rgb(139, 92, 246)\" strokeWidth=\"0.2\" />\n            <circle cx=\"50\" cy=\"50\" r=\"40\" fill=\"none\" stroke=\"rgb(139, 92, 246)\" strokeWidth=\"0.2\" />\n            <circle cx=\"50\" cy=\"50\" r=\"30\" fill=\"none\" stroke=\"rgb(139, 92, 246)\" strokeWidth=\"0.2\" />\n            <circle cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke=\"rgb(139, 92, 246)\" strokeWidth=\"0.2\" />\n          </svg>\n        </div>\n      </div>\n\n      <header className=\"container mx-auto pt-4 px-4 z-10 relative flex justify-between items-center\">\n        <Link href=\"/deck\" className=\"text-gray-400 hover:text-white transition-colors flex items-center\">\n          <ArrowLeft className=\"h-4 w-4 mr-1\" />\n          <span className=\"text-sm\">Return to Deck</span>\n        </Link>\n\n        <div className=\"flex items-center space-x-2\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            className=\"bg-transparent border-gray-800 hover:bg-gray-800 flex items-center gap-1\"\n            onClick={() => setShowConnectionDialog(true)}\n          >\n            <Wifi className=\"h-3 w-3\" />\n            <span>Connect</span>\n          </Button>\n\n          <div className=\"flex items-center space-x-2 bg-gray-900/50 border border-gray-800 rounded-full px-3 py-1\">\n            <div className={`w-3 h-3 rounded-full ${isConnected ? \"bg-green-500\" : \"bg-red-500\"}`}></div>\n            <span className=\"text-sm font-medium\">{isConnected ? \"Connected\" : \"Disconnected\"}</span>\n          </div>\n\n          <div className=\"flex items-center space-x-2 bg-gray-900/50 border border-gray-800 rounded-full px-3 py-1\">\n            <div className=\"w-3 h-3 rounded-full bg-purple-500 animate-pulse\"></div>\n            <span className=\"text-sm font-medium\">\n              Battle {battleState.currentBattle} • Round {battleState.round}\n            </span>\n          </div>\n\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            className=\"bg-transparent border-gray-800 hover:bg-gray-800 flex items-center gap-1\"\n            onClick={toggleSpectatorMode}\n          >\n            {isSpectatorMode ? \"Duel Mode\" : \"Spectate\"}\n            <Users className=\"h-3 w-3 ml-1\" />\n          </Button>\n        </div>\n      </header>\n\n      <main className=\"container mx-auto px-4 py-4 z-10 relative\">\n        {/* Connection Dialog */}\n        <Dialog open={showConnectionDialog} onOpenChange={setShowConnectionDialog}>\n          <DialogContent className=\"bg-gray-900 border border-gray-800 text-gray-100 max-w-md\">\n            <DialogHeader>\n              <DialogTitle className=\"font-serif text-2xl\">Connect to Server</DialogTitle>\n              <DialogDescription>Enter the IP address of the server running on your local network</DialogDescription>\n            </DialogHeader>\n\n            <div className=\"grid gap-4 py-4\">\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"ip\" className=\"text-right\">\n                  Server IP\n                </Label>\n                <Input\n                  id=\"ip\"\n                  placeholder=\"192.168.x.x\"\n                  className=\"col-span-3\"\n                  value={customServerIp}\n                  onChange={(e) => setCustomServerIp(e.target.value)}\n                />\n              </div>\n            </div>\n\n            <DialogFooter className=\"gap-2\">\n              <Button\n                variant=\"outline\"\n                className=\"flex-1 bg-transparent border-gray-700 hover:bg-gray-800\"\n                onClick={() => {\n                  setCustomServerIp(\"localhost\")\n                  setShowConnectionDialog(false)\n                }}\n              >\n                Localhost\n              </Button>\n              <Button\n                className=\"flex-1 bg-gradient-to-r from-purple-600 to-indigo-600 hover:from-purple-700 hover:to-indigo-700\"\n                onClick={() => setShowConnectionDialog(false)}\n              >\n                Connect\n              </Button>\n            </DialogFooter>\n          </DialogContent>\n        </Dialog>\n\n        {/* Room Dialog */}\n        <Dialog open={showRoomDialog} onOpenChange={setShowRoomDialog}>\n          <DialogContent className=\"bg-gray-900 border border-gray-800 text-gray-100 max-w-md\">\n            <DialogHeader>\n              <DialogTitle className=\"font-serif text-2xl\">Join or Create Room</DialogTitle>\n              <DialogDescription>Enter a room code or create a new one</DialogDescription>\n            </DialogHeader>\n\n            <div className=\"grid gap-4 py-4\">\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"roomCode\" className=\"text-right\">\n                  Room Code\n                </Label>\n                <Input\n                  id=\"roomCode\"\n                  placeholder=\"Enter room code\"\n                  className=\"col-span-3\"\n                  value={roomCodeInput}\n                  onChange={(e) => setRoomCodeInput(e.target.value)}\n                />\n              </div>\n            </div>\n\n            <DialogFooter className=\"gap-2\">\n              <Button\n                variant=\"outline\"\n                className=\"flex-1 bg-transparent border-gray-700 hover:bg-gray-800\"\n                onClick={() => {\n                  createRoom()\n                  setShowRoomDialog(false)\n                }}\n              >\n                Create Room\n              </Button>\n              <Button\n                className=\"flex-1 bg-gradient-to-r from-purple-600 to-indigo-600 hover:from-purple-700 hover:to-indigo-700\"\n                onClick={() => {\n                  joinRoom(roomCodeInput)\n                  setShowRoomDialog(false)\n                }}\n                disabled={!roomCodeInput}\n              >\n                Join Room\n              </Button>\n            </DialogFooter>\n          </DialogContent>\n        </Dialog>\n\n        {/* Waiting for connection screen */}\n        {!isConnected && !roomId && (\n          <div className=\"fixed inset-0 bg-black/70 z-50 flex items-center justify-center\">\n            <div className=\"bg-gray-900 border border-gray-800 rounded-lg p-8 max-w-md text-center\">\n              <h2 className=\"text-2xl font-serif mb-4\">Welcome to Wizard Battle</h2>\n              <p className=\"text-gray-400 mb-6\">Connect to a server to begin</p>\n\n              <div className=\"grid gap-4\">\n                <Button\n                  className=\"bg-gradient-to-r from-purple-600 to-indigo-600\"\n                  onClick={() => setShowConnectionDialog(true)}\n                >\n                  <Wifi className=\"h-4 w-4 mr-2\" />\n                  Connect to Server\n                </Button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Waiting for room screen */}\n        {isConnected && !roomId && (\n          <div className=\"fixed inset-0 bg-black/70 z-50 flex items-center justify-center\">\n            <div className=\"bg-gray-900 border border-gray-800 rounded-lg p-8 max-w-md text-center\">\n              <h2 className=\"text-2xl font-serif mb-4\">Welcome to Wizard Battle</h2>\n              <p className=\"text-gray-400 mb-6\">Connected to server at {customServerIp || \"localhost\"}</p>\n\n              <div className=\"grid gap-4\">\n                <Button\n                  className=\"bg-gradient-to-r from-purple-600 to-indigo-600\"\n                  onClick={() => setShowRoomDialog(true)}\n                >\n                  Create or Join Room\n                </Button>\n                <Button\n                  variant=\"outline\"\n                  className=\"bg-transparent border-gray-700 hover:bg-gray-800\"\n                  onClick={quickJoinBattle}\n                >\n                  Quick Join Battle\n                </Button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Waiting for opponent screen */}\n        {isWaitingForOpponent && roomId && (\n          <div className=\"fixed inset-0 bg-black/70 z-50 flex items-center justify-center\">\n            <div className=\"bg-gray-900 border border-gray-800 rounded-lg p-8 max-w-md text-center\">\n              <h2 className=\"text-2xl font-serif mb-4\">Waiting for Opponent</h2>\n              <p className=\"text-gray-400 mb-6\">Your battle room ID: {roomId}</p>\n              <div className=\"animate-pulse flex justify-center mb-6\">\n                <div className=\"w-16 h-16 border-4 border-purple-500 border-t-transparent rounded-full\"></div>\n              </div>\n              <p className=\"text-sm text-gray-400 mb-4\">\n                Share this room code with your friend: <span className=\"font-mono text-purple-400\">{roomId}</span>\n              </p>\n              <Button\n                variant=\"outline\"\n                className=\"bg-transparent border-gray-700 hover:bg-gray-800\"\n                onClick={quickJoinBattle}\n              >\n                Quick Join Battle\n              </Button>\n            </div>\n          </div>\n        )}\n\n        {/* Spectator Mode UI */}\n        {isSpectatorMode && (\n          <div className=\"bg-gray-900/30 border border-gray-800 rounded-lg p-4 mb-4\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <div className=\"flex items-center\">\n                <Users className=\"h-5 w-5 text-blue-400 mr-2\" />\n                <span className=\"font-medium\">Spectator Mode</span>\n                <Badge variant=\"outline\" className=\"ml-2 bg-blue-900/20 border-blue-500/30 text-blue-300\">\n                  {spectatorCount} Watching\n                </Badge>\n              </div>\n\n              <div className=\"flex items-center\">\n                <span className=\"font-medium\">Total Bets: {totalBetAmount} WIZ</span>\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\n              <div className=\"bg-gray-900/50 border border-gray-800 rounded-lg p-3\">\n                <h3 className=\"text-sm font-medium mb-2 flex items-center\">\n                  <Image\n                    src=\"/placeholder.svg?height=30&width=30\"\n                    alt=\"Player\"\n                    width={20}\n                    height={20}\n                    className=\"rounded-full mr-2\"\n                  />\n                  {formatSocketId(mySocketId)}\n                </h3>\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center\">\n                    <span className=\"text-xs text-gray-400 mr-2\">Odds:</span>\n                    <span className=\"text-xs text-green-400\">1.8x</span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <span className=\"text-xs text-gray-400 mr-2\">Bets:</span>\n                    <span className=\"text-xs\">{Math.round(totalBetAmount * 0.6)} WIZ</span>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"bg-gray-900/50 border border-gray-800 rounded-lg p-3\">\n                <h3 className=\"text-sm font-medium mb-2 flex items-center\">\n                  <Image\n                    src=\"/placeholder.svg?height=30&width=30\"\n                    alt=\"Opponent\"\n                    width={20}\n                    height={20}\n                    className=\"rounded-full mr-2\"\n                  />\n                  {formatSocketId(opponentSocketId) || \"Waiting for opponent...\"}\n                </h3>\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center\">\n                    <span className=\"text-xs text-gray-400 mr-2\">Odds:</span>\n                    <span className=\"text-xs text-green-400\">2.2x</span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <span className=\"text-xs text-gray-400 mr-2\">Bets:</span>\n                    <span className=\"text-xs\">{Math.round(totalBetAmount * 0.4)} WIZ</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {!isWalletConnected ? (\n              <ConnectWallet onConnect={() => setIsWalletConnected(true)} />\n            ) : (\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <Button className=\"bg-gradient-to-r from-purple-600 to-indigo-600 hover:from-purple-700 hover:to-indigo-700\">\n                  Bet on {formatSocketId(mySocketId)}\n                </Button>\n                <Button className=\"bg-gradient-to-r from-red-600 to-orange-600 hover:from-red-700 hover:to-orange-700\">\n                  Bet on {formatSocketId(opponentSocketId) || \"Opponent\"}\n                </Button>\n              </div>\n            )}\n          </div>\n        )}\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-7 gap-4\">\n          {/* Player Side */}\n          <div className=\"bg-gray-900/30 border border-gray-800 rounded-lg p-4 order-2 lg:order-1 lg:col-span-2\">\n            <div className=\"flex justify-between items-center mb-2\">\n              <h2 className=\"font-serif text-xl\">Your Wizard</h2>\n              <div className=\"text-xs text-gray-400\">Level 42</div>\n            </div>\n\n            {/* Hearts display */}\n            <div className=\"flex justify-center mb-2\">\n              {[...Array(2)].map((_, i) => (\n                <Heart\n                  key={i}\n                  className={`h-6 w-6 ${i < (2 - battleState.playerWins) ? \"text-red-500 fill-red-500\" : \"text-gray-600\"} mx-1`}\n                />\n              ))}\n            </div>\n\n            <div className=\"flex flex-col items-center mb-4\">\n              <div className=\"w-24 h-24 bg-gradient-to-br from-purple-900/50 to-indigo-900/50 rounded-full mb-3 flex items-center justify-center border border-purple-500/30\">\n                <Image\n                  src=\"/placeholder.svg?height=80&width=80\"\n                  alt=\"Player Avatar\"\n                  width={80}\n                  height={80}\n                  className=\"rounded-full\"\n                />\n              </div>\n              <div className=\"text-center\">\n                <p className=\"font-medium\">{formatSocketId(mySocketId)}</p>\n                <p className=\"text-xs text-purple-400\">Phoenix Patronus • Elder Wand</p>\n              </div>\n            </div>\n\n            <div className=\"space-y-3 mb-4\">\n              <div>\n                <div className=\"flex justify-between text-sm mb-1\">\n                  <span>Health</span>\n                  <span>{battleState.playerHealth}/100</span>\n                </div>\n                <Progress\n                  value={battleState.playerHealth}\n                  className=\"h-2 bg-gray-800\"\n                  indicatorClassName=\"bg-gradient-to-r from-purple-500 to-indigo-500\"\n                />\n              </div>\n            </div>\n\n            {/* Active Effects */}\n            <div className=\"border-t border-gray-800 pt-3 mb-4\">\n              <h3 className=\"text-sm font-medium mb-2\">Active Effects:</h3>\n              <div className=\"flex flex-wrap gap-1\">\n                {battleState.playerUsedDefense && (\n                  <div className=\"bg-blue-900/20 border border-blue-900/30 rounded px-2 py-1 text-xs flex items-center\">\n                    <Shield className=\"h-3 w-3 mr-1 text-blue-400\" />\n                    <span>Defense Used</span>\n                  </div>\n                )}\n                {!battleState.playerUsedDefense && <div className=\"text-xs text-gray-400\">No active effects</div>}\n              </div>\n            </div>\n\n            {/* Battle Log */}\n            <div className=\"bg-gray-900/50 border border-gray-800 rounded-lg p-3 mb-4\">\n              <div className=\"flex justify-between items-center mb-2\">\n                <div className=\"text-sm text-gray-400\">Battle Log</div>\n                <div className=\"text-xs px-2 py-0.5 rounded-full bg-gray-800 text-gray-300\">Live</div>\n              </div>\n\n              <div className=\"h-28 overflow-y-auto space-y-1 text-sm mb-1 font-mono battle-log\">\n                {battleState.battleLog.map((log, index) => (\n                  <p\n                    key={index}\n                    className={`${\n                      log.includes(\"You cast\") || log.includes(\"You won\")\n                        ? \"text-purple-400\"\n                        : log.includes(\"Opponent\")\n                          ? \"text-red-400\"\n                          : \"text-gray-400\"\n                    }`}\n                  >\n                    {log}\n                  </p>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          {/* Battle Arena - Center */}\n          <div className=\"bg-gray-900/30 border border-gray-800 rounded-lg p-4 order-1 lg:order-2 lg:col-span-3\">\n            {/* Battle Arena */}\n            <div className=\"relative\">\n              <div className=\"absolute inset-0 bg-gradient-to-b from-transparent to-purple-900/10 rounded-lg pointer-events-none\"></div>\n\n              {/* Player Hearts and Health */}\n              <div className=\"flex justify-between items-center mb-6\">\n                <div className=\"flex items-center\">\n                  <div className=\"w-8 h-8 bg-gradient-to-br from-purple-900/50 to-indigo-900/50 rounded-full flex items-center justify-center border border-purple-500/30\">\n                    <Image\n                      src=\"/placeholder.svg?height=30&width=30\"\n                      alt=\"Player\"\n                      width={30}\n                      height={30}\n                      className=\"rounded-full\"\n                    />\n                  </div>\n                  <Progress\n                    value={battleState.playerHealth}\n                    className=\"w-24 h-1.5 bg-gray-800 ml-2\"\n                    indicatorClassName=\"bg-gradient-to-r from-purple-500 to-indigo-500\"\n                  />\n                </div>\n\n                <div className=\"flex items-center\">\n                  <Progress\n                    value={battleState.opponentHealth}\n                    className=\"w-24 h-1.5 bg-gray-800 mr-2\"\n                    indicatorClassName=\"bg-gradient-to-r from-red-500 to-rose-500\"\n                  />\n                  <div className=\"w-8 h-8 bg-gradient-to-br from-red-900/50 to-orange-900/50 rounded-full flex items-center justify-center border border-red-500/30\">\n                    <Image\n                      src=\"/placeholder.svg?height=30&width=30\"\n                      alt=\"Opponent\"\n                      width={30}\n                      height={30}\n                      className=\"rounded-full\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              {/* Battle Visualization */}\n              <div className=\"flex justify-center items-center h-40 relative\">\n                <div className=\"w-16 h-16 bg-purple-500/10 border border-purple-500/20 rounded-full flex items-center justify-center relative\">\n                  <div className=\"absolute inset-0 rounded-full bg-purple-500/5 animate-ping\"></div>\n                  <span className=\"text-2xl\">⚡</span>\n                </div>\n              </div>\n            </div>\n\n            {/* Spell Cards */}\n            <div className=\"mt-6\">\n              <h3 className=\"text-sm font-medium mb-3\">Cast Your Spell:</h3>\n\n              {waitingForOpponentMove ? (\n                <div className=\"text-center py-4\">\n                  <div className=\"animate-pulse flex justify-center mb-2\">\n                    <div className=\"w-8 h-8 border-2 border-purple-500 border-t-transparent rounded-full\"></div>\n                  </div>\n                  <p className=\"text-sm text-gray-400\">Waiting for opponent's move...</p>\n                </div>\n              ) : (\n                <div className=\"grid grid-cols-3 gap-3\">\n                  <BattleCard\n                    element=\"inferno\"\n                    name=\"Inferno\"\n                    description=\"Fire beats Ice, loses to Wind\"\n                    icon={<Flame className=\"h-5 w-5 text-red-400\" />}\n                    color=\"red\"\n                    onCast={(level, useDefense) => castSpell(\"inferno\", level, useDefense)}\n                    canUseDefense={!battleState.playerUsedDefense}\n                  />\n\n                  <BattleCard\n                    element=\"glacius\"\n                    name=\"Glacius\"\n                    description=\"Ice beats Wind, loses to Fire\"\n                    icon={<Snowflake className=\"h-5 w-5 text-blue-400\" />}\n                    color=\"blue\"\n                    onCast={(level, useDefense) => castSpell(\"glacius\", level, useDefense)}\n                    canUseDefense={!battleState.playerUsedDefense}\n                  />\n\n                  <BattleCard\n                    element=\"ventus\"\n                    name=\"Ventus\"\n                    description=\"Wind beats Fire, loses to Ice\"\n                    icon={<Wind className=\"h-5 w-5 text-green-400\" />}\n                    color=\"green\"\n                    onCast={(level, useDefense) => castSpell(\"ventus\", level, useDefense)}\n                    canUseDefense={!battleState.playerUsedDefense}\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Opponent Side */}\n          <div className=\"bg-gray-900/30 border border-gray-800 rounded-lg p-4 order-3 lg:col-span-2\">\n            <div className=\"flex justify-between items-center mb-2\">\n              <h2 className=\"font-serif text-xl\">Opponent</h2>\n              <div className=\"text-xs text-gray-400\">Level 40</div>\n            </div>\n\n            {/* Hearts display */}\n            <div className=\"flex justify-center mb-2\">\n              {[...Array(2)].map((_, i) => (\n                <Heart\n                  key={i}\n                  className={`h-6 w-6 ${i < (2 - battleState.opponentWins) ? \"text-red-500 fill-red-500\" : \"text-gray-600\"} mx-1`}\n                />\n              ))}\n            </div>\n\n            <div className=\"flex flex-col items-center mb-4\">\n              <div className=\"w-24 h-24 bg-gradient-to-br from-red-900/50 to-orange-900/50 rounded-full mb-3 flex items-center justify-center border border-red-500/30\">\n                <Image\n                  src=\"/placeholder.svg?height=80&width=80\"\n                  alt=\"Opponent Avatar\"\n                  width={80}\n                  height={80}\n                  className=\"rounded-full\"\n                />\n              </div>\n              <div className=\"text-center\">\n                <p className=\"font-medium\">{formatSocketId(opponentSocketId) || \"Waiting for opponent...\"}</p>\n                <p className=\"text-xs text-red-400\">Wolf Patronus • Dragon Heartstring Wand</p>\n              </div>\n            </div>\n\n            <div className=\"space-y-3 mb-4\">\n              <div>\n                <div className=\"flex justify-between text-sm mb-1\">\n                  <span>Health</span>\n                  <span>{battleState.opponentHealth}/100</span>\n                </div>\n                <Progress\n                  value={battleState.opponentHealth}\n                  className=\"h-2 bg-gray-800\"\n                  indicatorClassName=\"bg-gradient-to-r from-red-500 to-rose-500\"\n                />\n              </div>\n            </div>\n\n            {/* Active Effects */}\n            <div className=\"border-t border-gray-800 pt-3\">\n              <h3 className=\"text-sm font-medium mb-2\">Active Effects:</h3>\n              <div className=\"flex flex-wrap gap-1\">\n                {battleState.opponentUsedDefense && (\n                  <div className=\"bg-red-900/20 border border-red-900/30 rounded px-2 py-1 text-xs flex items-center\">\n                    <Shield className=\"h-3 w-3 mr-1 text-red-400\" />\n                    <span>Defense Used</span>\n                  </div>\n                )}\n                {!battleState.opponentUsedDefense && <div className=\"text-xs text-gray-400\">No active effects</div>}\n              </div>\n            </div>\n\n            {/* Game Rules */}\n            <div className=\"mt-6 bg-gray-900/50 border border-gray-800 rounded-lg p-3\">\n              <h3 className=\"text-sm font-medium mb-2\">Game Rules:</h3>\n              <ul className=\"text-xs text-gray-400 space-y-1\">\n                <li>• First to win 2 battles wins the duel</li>\n                <li>• Each battle consists of 5 rounds</li>\n                <li>• Fire beats Ice, Ice beats Wind, Wind beats Fire</li>\n                <li>• Level 1: 20 damage, Level 2: 25 damage, Level 3: 30 damage</li>\n                <li>• Defense card can be used once per battle</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </main>\n\n      {/* Round Result Dialog */}\n      <Dialog open={showRoundResult} onOpenChange={setShowRoundResult}>\n        <DialogContent className=\"bg-gray-900 border border-gray-800 text-gray-100 max-w-md\">\n          <DialogHeader>\n            <DialogTitle className=\"font-serif text-2xl text-center\">\n              Battle {battleState.currentBattle - 1} Complete!\n            </DialogTitle>\n            <DialogDescription className=\"text-center\">\n              {roundWinner === \"player\" ? (\n                <span className=\"text-purple-400\">You won this battle!</span>\n              ) : roundWinner === \"opponent\" ? (\n                <span className=\"text-red-400\">Your opponent won this battle!</span>\n              ) : (\n                <span className=\"text-yellow-400\">Battle ended in a tie!</span>\n              )}\n            </DialogDescription>\n          </DialogHeader>\n\n          <div className=\"flex justify-center items-center py-6\">\n            {roundWinner === \"player\" ? (\n              <div className=\"w-24 h-24 bg-purple-900/30 rounded-full flex items-center justify-center\">\n                <Trophy className=\"h-12 w-12 text-yellow-400\" />\n              </div>\n            ) : roundWinner === \"opponent\" ? (\n              <div className=\"w-24 h-24 bg-red-900/30 rounded-full flex items-center justify-center\">\n                <Shield className=\"h-12 w-12 text-red-400\" />\n              </div>\n            ) : (\n              <div className=\"w-24 h-24 bg-yellow-900/30 rounded-full flex items-center justify-center\">\n                <Shield className=\"h-12 w-12 text-yellow-400\" />\n              </div>\n            )}\n          </div>\n\n          <div className=\"flex justify-between items-center px-4 py-2 bg-gray-800/50 rounded-lg mb-4\">\n            <div className=\"flex items-center\">\n              <div className=\"flex mr-2\">\n                {[...Array(2)].map((_, i) => (\n                  <Heart\n                    key={i}\n                    className={`h-5 w-5 ${i < (2 - battleState.playerWins) ? \"text-red-500 fill-red-500\" : \"text-gray-600\"} mr-1`}\n                  />\n                ))}\n              </div>\n              <span>{formatSocketId(mySocketId)}</span>\n            </div>\n            <div className=\"text-gray-400\">vs</div>\n            <div className=\"flex items-center\">\n              <span>{formatSocketId(opponentSocketId) || \"Opponent\"}</span>\n              <div className=\"flex ml-2\">\n                {[...Array(2)].map((_, i) => (\n                  <Heart\n                    key={i}\n                    className={`h-5 w-5 ${i < (2 - battleState.opponentWins) ? \"text-red-500 fill-red-500\" : \"text-gray-600\"} ml-1`}\n                  />\n                ))}\n              </div>\n            </div>\n          </div>\n\n          <DialogFooter>\n            <Button\n              className=\"w-full bg-gradient-to-r from-purple-600 to-indigo-600 hover:from-purple-700 hover:to-indigo-700\"\n              onClick={continueToNextRound}\n            >\n              Continue to Battle {battleState.currentBattle}\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      {/* Battle Result Dialog */}\n      <Dialog open={showBattleResult} onOpenChange={setShowBattleResult}>\n        <DialogContent className=\"bg-gray-900 border border-gray-800 text-gray-100 max-w-md\">\n          <DialogHeader>\n            <DialogTitle className=\"font-serif text-2xl text-center\">Duel Complete!</DialogTitle>\n            <DialogDescription className=\"text-center\">\n              {battleWinner === \"player\" ? (\n                <span className=\"text-purple-400\">Victory! You have defeated your opponent!</span>\n              ) : (\n                <span className=\"text-red-400\">Defeat! Your opponent has bested you!</span>\n              )}\n            </DialogDescription>\n          </DialogHeader>\n\n          <div className=\"flex justify-center items-center py-8\">\n            {battleWinner === \"player\" ? (\n              <div className=\"w-32 h-32 bg-purple-900/30 rounded-full flex items-center justify-center\">\n                <Trophy className=\"h-16 w-16 text-yellow-400\" />\n              </div>\n            ) : (\n              <div className=\"w-32 h-32 bg-red-900/30 rounded-full flex items-center justify-center\">\n                <Shield className=\"h-16 w-16 text-red-400\" />\n              </div>\n            )}\n          </div>\n\n          <div className=\"text-center mb-6\">\n            <p className=\"text-lg font-medium mb-2\">\n              {battleWinner === \"player\" ? \"Congratulations, Wizard!\" : \"Better luck next time, Wizard!\"}\n            </p>\n            <p className=\"text-gray-400\">\n              {battleWinner === \"player\"\n                ? \"Your mastery of the arcane arts has proven superior.\"\n                : \"Even the greatest wizards face defeat. Learn and grow stronger.\"}\n            </p>\n          </div>\n\n          <DialogFooter className=\"flex flex-col sm:flex-row gap-2\">\n            <Button\n              variant=\"outline\"\n              className=\"flex-1 bg-transparent border-gray-700 hover:bg-gray-800\"\n              onClick={endBattle}\n            >\n              Return to Deck\n            </Button>\n            <Button\n              className=\"flex-1 bg-gradient-to-r from-purple-600 to-indigo-600 hover:from-purple-700 hover:to-indigo-700\"\n              onClick={resetBattle}\n            >\n              Duel Again\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      <script\n        dangerouslySetInnerHTML={{\n          __html: `\n          document.addEventListener('DOMContentLoaded', function() {\n            // Add subtle hover effects to spell buttons\n            const spellButtons = document.querySelectorAll('button');\n            spellButtons.forEach(button => {\n              button.addEventListener('mouseenter', () => {\n                button.style.transform = 'translateY(-2px)';\n                button.style.transition = 'all 0.2s ease';\n              });\n              \n              button.addEventListener('mouseleave', () => {\n                button.style.transform = 'translateY(0)';\n              });\n            });\n          });\n        `,\n        }}\n      />\n    </div>\n  )\n}\n\n"],"names":[],"mappings":"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","debugId":null}}]
>>>>>>> 8acf52e585866a6604bb7217a75c24d59d5ae707
}